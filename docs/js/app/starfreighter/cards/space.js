// Compiled by ClojureScript 1.9.227 {:static-fns true, :optimize-constants true}
goog.provide('starfreighter.cards.space');
goog.require('cljs.core');
goog.require('starfreighter.db');
goog.require('starfreighter.desc');
goog.require('starfreighter.rand');
goog.require('starfreighter.util');
starfreighter.cards.space.cards = new cljs.core.PersistentVector(null, 15, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.PersistentArrayMap(null, 4, [cljs.core.cst$kw$id,cljs.core.cst$kw$flavor_DASH_cruise_DASH_ship,cljs.core.cst$kw$prereq,cljs.core.comp.cljs$core$IFn$_invoke$arity$2(starfreighter.db.find_module.cljs$core$IFn$_invoke$arity$1(cljs.core.cst$kw$tourism),starfreighter.db.current_dest),cljs.core.cst$kw$weight,cljs.core.constantly((4)),cljs.core.cst$kw$gen,(function (state){
return new cljs.core.PersistentArrayMap(null, 3, [cljs.core.cst$kw$type,cljs.core.cst$kw$info,cljs.core.cst$kw$text,new cljs.core.PersistentVector(null, 6, 5, cljs.core.PersistentVector.EMPTY_NODE, ["You ",starfreighter.desc.r.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq(["overtake","pass by"], 0))," a slow-moving, gaudily painted vessel, configured as ","a passenger liner: a cruise ship ferrying wealthy tourists ",starfreighter.desc.o("lazily "),"between the stars."], null),cljs.core.cst$kw$ok,cljs.core.PersistentVector.EMPTY], null);
})], null),new cljs.core.PersistentArrayMap(null, 4, [cljs.core.cst$kw$id,cljs.core.cst$kw$flavor_DASH_diplo_DASH_ship,cljs.core.cst$kw$prereq,cljs.core.comp.cljs$core$IFn$_invoke$arity$2(starfreighter.db.find_module.cljs$core$IFn$_invoke$arity$1(cljs.core.cst$kw$diplomacy),starfreighter.db.current_dest),cljs.core.cst$kw$weight,cljs.core.constantly((4)),cljs.core.cst$kw$gen,(function (state){
var base_escorts = starfreighter.desc.r.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq(["fighters","interceptors"], 0));
var escorts = new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [starfreighter.desc.o(starfreighter.desc.r.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq(["heavy","heavily armed","light","lightly armed"], 0)))," ",base_escorts], null);
var group = new cljs.core.PersistentVector(null, 4, 5, cljs.core.PersistentVector.EMPTY_NODE, ["a ",starfreighter.desc.r.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq(["company","flight","handful","squadron","pair","wing"], 0))," of ",escorts], null);
return new cljs.core.PersistentArrayMap(null, 3, [cljs.core.cst$kw$type,cljs.core.cst$kw$info,cljs.core.cst$kw$text,new cljs.core.PersistentVector(null, 11, 5, cljs.core.PersistentVector.EMPTY_NODE, ["You",starfreighter.desc.r.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq(["\u2019re overtaken by"," overtake"," pass by"], 0))," ",starfreighter.desc.r.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq(["a","some sort of"], 0))," light ",starfreighter.desc.o("passenger "),starfreighter.desc.r.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq(["courier","shuttle","transport"], 0)),", ",starfreighter.desc.r.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, ["accompanied by ",starfreighter.desc.r.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, ["an escort of ",escorts], null),group], 0))], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, ["escorted by ",group], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, ["protected by ",starfreighter.desc.r.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, ["an escort of ",escorts], null),group], 0))], null),new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, ["with ",group," as an escort"], null)], 0)),".",starfreighter.desc.r.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([new cljs.core.PersistentVector(null, 4, 5, cljs.core.PersistentVector.EMPTY_NODE, [starfreighter.desc.a(new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [starfreighter.desc.o("important "),starfreighter.desc.r.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq(["ambassador","diplomat","politician"], 0))], null)),", en route to ",cljs.core.cst$kw$name.cljs$core$IFn$_invoke$arity$1(starfreighter.db.current_dest(state)),"?"], null),new cljs.core.PersistentVector(null, 7, 5, cljs.core.PersistentVector.EMPTY_NODE, ["One of the ",base_escorts," ",starfreighter.desc.r.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([new cljs.core.PersistentVector(null, 4, 5, cljs.core.PersistentVector.EMPTY_NODE, ["edges ",starfreighter.desc.o("just "),"a bit closer",starfreighter.desc.o(" to you")], null),new cljs.core.PersistentVector(null, 4, 5, cljs.core.PersistentVector.EMPTY_NODE, ["keeps its ",starfreighter.desc.r.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq(["cannons","guns","weapons"], 0))," trained ",starfreighter.desc.r.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq(["in your direction","on you"], 0))], null),new cljs.core.PersistentVector(null, 7, 5, cljs.core.PersistentVector.EMPTY_NODE, [starfreighter.desc.r.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq(["pivots","swivels","tilts","trains"], 0))," its ",starfreighter.desc.r.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq(["cannons","guns","weapons"], 0))," ",starfreighter.desc.r.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq(["briefly","menacingly"], 0))," ",starfreighter.desc.r.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq(["in your direction","towards you"], 0))], null)], 0))," as you pass",starfreighter.desc.o(new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [", as if warning you to ",starfreighter.desc.r.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq(["keep your distance","stay away"], 0))], null)),"."], null),""], 0))], null),cljs.core.cst$kw$ok,cljs.core.PersistentVector.EMPTY], null);
})], null),new cljs.core.PersistentArrayMap(null, 4, [cljs.core.cst$kw$id,cljs.core.cst$kw$flavor_DASH_space_DASH_battle,cljs.core.cst$kw$prereq,cljs.core.comp.cljs$core$IFn$_invoke$arity$2(starfreighter.db.find_module.cljs$core$IFn$_invoke$arity$1(cljs.core.cst$kw$warzone),starfreighter.db.current_dest),cljs.core.cst$kw$weight,cljs.core.constantly((4)),cljs.core.cst$kw$gen,(function (state){
return new cljs.core.PersistentArrayMap(null, 3, [cljs.core.cst$kw$type,cljs.core.cst$kw$info,cljs.core.cst$kw$text,new cljs.core.PersistentVector(null, 18, 5, cljs.core.PersistentVector.EMPTY_NODE, ["In the distance, you ",starfreighter.desc.o("think you "),"can ",starfreighter.desc.o("just barely "),starfreighter.desc.r.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq(["glimpse","make out","see"], 0))," the ",starfreighter.desc.r.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq(["telltale","unmistakable"], 0))," bright flashes of ",starfreighter.desc.r.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq(["beam cannon","disruptor","plasma","wavebeam artillery"], 0))," fire: ",starfreighter.desc.o(new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [starfreighter.desc.r.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq(["a pair","clusters","two groups"], 0))," of"], null))," ",starfreighter.desc.r.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq(["enemy","hostile","rival",""], 0))," ",starfreighter.desc.r.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq(["attack ships","battlecruisers","gunboats","warships"], 0))," ",starfreighter.desc.r.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq(["exchanging","trading"], 0))," blows."], null),cljs.core.cst$kw$ok,cljs.core.PersistentVector.EMPTY], null);
})], null),new cljs.core.PersistentArrayMap(null, 4, [cljs.core.cst$kw$id,cljs.core.cst$kw$flavor_DASH_old_DASH_wreck,cljs.core.cst$kw$prereq,cljs.core.comp.cljs$core$IFn$_invoke$arity$2(cljs.core.some_fn.cljs$core$IFn$_invoke$arity$2(starfreighter.db.find_module.cljs$core$IFn$_invoke$arity$1(cljs.core.cst$kw$warzone),starfreighter.db.find_module.cljs$core$IFn$_invoke$arity$1(cljs.core.cst$kw$piracy)),starfreighter.db.current_dest),cljs.core.cst$kw$weight,cljs.core.constantly((4)),cljs.core.cst$kw$gen,(function (state){
return new cljs.core.PersistentArrayMap(null, 3, [cljs.core.cst$kw$type,cljs.core.cst$kw$info,cljs.core.cst$kw$text,new cljs.core.PersistentVector(null, 17, 5, cljs.core.PersistentVector.EMPTY_NODE, ["You drift past the ",starfreighter.desc.adj_list(new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [starfreighter.desc.o("distant"),starfreighter.desc.o(starfreighter.desc.r.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq(["broken","burned-out","deteriorating","skeletal","twisted"], 0)))], null))," ",starfreighter.desc.r.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq(["carcass","hulk","remains","wreck"], 0))," of ",starfreighter.desc.a(starfreighter.desc.r.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq(["abandoned","defeated","fallen","scuttled"], 0)))," ",starfreighter.desc.r.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq(["ship","vessel"], 0)),".","A ",starfreighter.desc.r.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq(["gunboat",new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, ["patrol ",starfreighter.desc.r.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq(["boat","ship"], 0))], null),"picket ship"], 0)),"? A ",starfreighter.desc.o(starfreighter.desc.r.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq(["cargo","civilian","heavy","light","merchant"], 0)))," freighter?","The damage is too ",starfreighter.desc.r.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq(["complete","heavy","thorough"], 0))," to say for sure."], null),cljs.core.cst$kw$ok,cljs.core.PersistentVector.EMPTY], null);
})], null),new cljs.core.PersistentArrayMap(null, 4, [cljs.core.cst$kw$id,cljs.core.cst$kw$info_DASH_ship_DASH_damaged,cljs.core.cst$kw$prereq,cljs.core.constantly(true),cljs.core.cst$kw$weight,cljs.core.constantly((8)),cljs.core.cst$kw$gen,(function (state){
var damage = starfreighter.rand.rand_int_STAR_.cljs$core$IFn$_invoke$arity$2((5),(10));
return new cljs.core.PersistentArrayMap(null, 4, [cljs.core.cst$kw$type,cljs.core.cst$kw$info,cljs.core.cst$kw$speaker,starfreighter.db.some_preferably.cljs$core$IFn$_invoke$arity$3(state,starfreighter.db.mechanic_QMARK_,starfreighter.db.crew),cljs.core.cst$kw$text,(((damage > (7)))?new cljs.core.PersistentVector(null, 11, 5, cljs.core.PersistentVector.EMPTY_NODE, [starfreighter.desc.o(starfreighter.desc.r.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq(["Ack! ","Ouch! "], 0))),starfreighter.desc.r.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq(["What in the blazes was that?!","What just happened?!","What the hell was that?!","What was that?!"], 0))," ",starfreighter.desc.r.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq(["Cap\u2019n, I think","Felt like","I think","Sounds like"], 0))," something big ",starfreighter.desc.o("might\u2019ve "),"just ",starfreighter.desc.r.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq(["bounced off","crashed into","hit"], 0))," the ",starfreighter.desc.r.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq(["hull","ship"], 0)),"!"], null):new cljs.core.PersistentVector(null, 6, 5, cljs.core.PersistentVector.EMPTY_NODE, [starfreighter.desc.r.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq(["Ah, hell.","Blasted space junk."], 0))," Something just ",starfreighter.desc.r.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq(["bounced off","crashed into","hit"], 0))," the ",starfreighter.desc.r.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq(["hull","ship"], 0)),"."], null)),cljs.core.cst$kw$ok,new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.cst$kw$damage_DASH_ship,damage], null)], null)], null);
})], null),new cljs.core.PersistentArrayMap(null, 5, [cljs.core.cst$kw$id,cljs.core.cst$kw$info_DASH_ship_DASH_repaired,cljs.core.cst$kw$prereq,(function (p1__22162_SHARP_){
return (cljs.core.cst$kw$ship.cljs$core$IFn$_invoke$arity$1(p1__22162_SHARP_) < (100));
}),cljs.core.cst$kw$bind,new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$mechanic,starfreighter.db.some_where.cljs$core$IFn$_invoke$arity$2(starfreighter.db.mechanic_QMARK_,starfreighter.db.crew)], null),cljs.core.cst$kw$weight,(function (p1__22163_SHARP_){
return starfreighter.util.bucket(cljs.core.cst$kw$ship.cljs$core$IFn$_invoke$arity$1(p1__22163_SHARP_),new cljs.core.PersistentVector(null, 4, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [(20),(2)], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [(40),(4)], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [(60),(2)], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [(100),(1)], null)], null));
}),cljs.core.cst$kw$gen,(function (state){
return new cljs.core.PersistentArrayMap(null, 4, [cljs.core.cst$kw$type,cljs.core.cst$kw$info,cljs.core.cst$kw$speaker,cljs.core.cst$kw$mechanic.cljs$core$IFn$_invoke$arity$1(cljs.core.cst$kw$bound.cljs$core$IFn$_invoke$arity$1(state)),cljs.core.cst$kw$text,new cljs.core.PersistentVector(null, 7, 5, cljs.core.PersistentVector.EMPTY_NODE, ["I\u2019ve managed to make a few tweaks that might get this ",starfreighter.desc.r.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq(["hunk of junk","rust bucket"], 0))," running a little smoother. ","Hopefully it\u2019ll ",starfreighter.desc.o("be enough to "),starfreighter.desc.r.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq(["keep us going","keep us moving","smooth things over","tide us over"], 0))," until we can get a proper repair done in port."], null),cljs.core.cst$kw$ok,new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.cst$kw$repair_DASH_ship,(5)], null)], null)], null);
})], null),new cljs.core.PersistentArrayMap(null, 5, [cljs.core.cst$kw$id,cljs.core.cst$kw$request_DASH_try_DASH_fix_DASH_engine,cljs.core.cst$kw$prereq,(function (p1__22164_SHARP_){
return (cljs.core.cst$kw$ship.cljs$core$IFn$_invoke$arity$1(p1__22164_SHARP_) <= (60));
}),cljs.core.cst$kw$bind,new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$mechanic,starfreighter.db.some_where.cljs$core$IFn$_invoke$arity$2(starfreighter.db.mechanic_QMARK_,starfreighter.db.crew)], null),cljs.core.cst$kw$weight,(function (p1__22165_SHARP_){
if((cljs.core.cst$kw$ship.cljs$core$IFn$_invoke$arity$1(p1__22165_SHARP_) <= (20))){
return (2);
} else {
return (1);
}
}),cljs.core.cst$kw$gen,(function (p__22180){
var map__22181 = p__22180;
var map__22181__$1 = ((((!((map__22181 == null)))?((((map__22181.cljs$lang$protocol_mask$partition0$ & (64))) || (map__22181.cljs$core$ISeq$))?true:false):false))?cljs.core.apply.cljs$core$IFn$_invoke$arity$2(cljs.core.hash_map,map__22181):map__22181);
var state = map__22181__$1;
var map__22182 = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__22181__$1,cljs.core.cst$kw$bound);
var map__22182__$1 = ((((!((map__22182 == null)))?((((map__22182.cljs$lang$protocol_mask$partition0$ & (64))) || (map__22182.cljs$core$ISeq$))?true:false):false))?cljs.core.apply.cljs$core$IFn$_invoke$arity$2(cljs.core.hash_map,map__22182):map__22182);
var mechanic = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__22182__$1,cljs.core.cst$kw$mechanic);
var would_succeed_QMARK_ = starfreighter.rand.rand_nth(new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [true,true,false], null));
var next_if_yes = (cljs.core.truth_(would_succeed_QMARK_)?new cljs.core.PersistentArrayMap(null, 4, [cljs.core.cst$kw$type,cljs.core.cst$kw$info,cljs.core.cst$kw$speaker,mechanic,cljs.core.cst$kw$text,"Hah! Toldja I was up to the task.",cljs.core.cst$kw$ok,new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.cst$kw$add_DASH_memory,mechanic,cljs.core.cst$kw$fixed_DASH_engine], null)], null)], null):(function (){var critic = starfreighter.db.some_preferably.cljs$core$IFn$_invoke$arity$3(state,((function (would_succeed_QMARK_,map__22181,map__22181__$1,state,map__22182,map__22182__$1,mechanic){
return (function (p1__22166_SHARP_){
return cljs.core.not_EQ_.cljs$core$IFn$_invoke$arity$2(p1__22166_SHARP_,mechanic);
});})(would_succeed_QMARK_,map__22181,map__22181__$1,state,map__22182,map__22182__$1,mechanic))
,starfreighter.db.crew);
return new cljs.core.PersistentArrayMap(null, 4, [cljs.core.cst$kw$type,cljs.core.cst$kw$info,cljs.core.cst$kw$speaker,critic,cljs.core.cst$kw$text,((cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(critic,mechanic))?"Dammit\u2026 apparently you shouldn\u2019t have trusted me after all.":new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, ["What a disaster! It\u2019s just like I\u2019m always saying: you can\u2019t trust ",cljs.core.cst$kw$shortname.cljs$core$IFn$_invoke$arity$1(mechanic)," with anything complicated. You should know that by now!"], null)),cljs.core.cst$kw$ok,new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.cst$kw$add_DASH_memory,mechanic,cljs.core.cst$kw$failed_DASH_to_DASH_fix_DASH_engine], null),new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.cst$kw$add_DASH_memory,critic,cljs.core.cst$kw$witnessed_DASH_failure], null)], null)], null);
})());
return new cljs.core.PersistentArrayMap(null, 5, [cljs.core.cst$kw$type,cljs.core.cst$kw$yes_DASH_no,cljs.core.cst$kw$speaker,mechanic,cljs.core.cst$kw$text,new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, ["The engine\u2019s really struggling, but I think I might know how to fix it! ","It\u2019s a bit dangerous, though. Can I give it a try?"], null),cljs.core.cst$kw$yes,new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.cst$kw$set_DASH_next_DASH_card,next_if_yes], null),(cljs.core.truth_(would_succeed_QMARK_)?new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.cst$kw$repair_DASH_ship,(10)], null):new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.cst$kw$damage_DASH_ship,(15)], null))], null),cljs.core.cst$kw$no,cljs.core.PersistentVector.EMPTY], null);
})], null),new cljs.core.PersistentArrayMap(null, 4, [cljs.core.cst$kw$id,cljs.core.cst$kw$request_DASH_promise_DASH_cash,cljs.core.cst$kw$prereq,cljs.core.complement(starfreighter.db.can_afford_QMARK_.cljs$core$IFn$_invoke$arity$1((500))),cljs.core.cst$kw$weight,cljs.core.constantly((8)),cljs.core.cst$kw$gen,(function (state){
var complainer = starfreighter.db.some_STAR_.cljs$core$IFn$_invoke$arity$2(state,starfreighter.db.crew);
var dest = cljs.core.cst$kw$name.cljs$core$IFn$_invoke$arity$1(starfreighter.db.current_dest(state));
return new cljs.core.PersistentArrayMap(null, 5, [cljs.core.cst$kw$type,cljs.core.cst$kw$yes_DASH_no,cljs.core.cst$kw$speaker,complainer,cljs.core.cst$kw$text,new cljs.core.PersistentVector(null, 4, 5, cljs.core.PersistentVector.EMPTY_NODE, ["I am starving! I know money\u2019s tight and all, Cap\u2019n, but can you please ","promise me we\u2019ll at least earn enough at ",dest," to stock up on food before we leave port again?"], null),cljs.core.cst$kw$yes,new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.cst$kw$add_DASH_memory,complainer,cljs.core.cst$kw$ran_DASH_out_DASH_of_DASH_cash], null),new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.cst$kw$add_DASH_memory,complainer,cljs.core.cst$kw$was_DASH_reassured_DASH_about_DASH_cash], null)], null),cljs.core.cst$kw$no,new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.cst$kw$add_DASH_memory,complainer,cljs.core.cst$kw$ran_DASH_out_DASH_of_DASH_cash], null)], null)], null);
})], null),new cljs.core.PersistentArrayMap(null, 5, [cljs.core.cst$kw$id,cljs.core.cst$kw$info_DASH_crew_DASH_friendly,cljs.core.cst$kw$prereq,(function (p1__22167_SHARP_){
return !(cljs.core.contains_QMARK_(cljs.core.cst$kw$recent_DASH_picks.cljs$core$IFn$_invoke$arity$1(p1__22167_SHARP_),cljs.core.cst$kw$info_DASH_crew_DASH_unfriendly));
}),cljs.core.cst$kw$bind,new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.cst$kw$crew_DASH_1,starfreighter.db.some_STAR_.cljs$core$IFn$_invoke$arity$1(starfreighter.db.crew)], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.cst$kw$crew_DASH_2,(function (p1__22168_SHARP_){
return starfreighter.db.some_where.cljs$core$IFn$_invoke$arity$3(p1__22168_SHARP_,cljs.core.partial.cljs$core$IFn$_invoke$arity$2(cljs.core.not_EQ_,cljs.core.cst$kw$crew_DASH_1.cljs$core$IFn$_invoke$arity$1(cljs.core.cst$kw$bound.cljs$core$IFn$_invoke$arity$1(p1__22168_SHARP_))),starfreighter.db.crew);
})], null)], null),cljs.core.cst$kw$weight,(function (p1__22169_SHARP_){
if((starfreighter.db.avg_crew_mood(p1__22169_SHARP_) >= (60))){
return (4);
} else {
return (2);
}
}),cljs.core.cst$kw$gen,(function (p__22185){
var map__22186 = p__22185;
var map__22186__$1 = ((((!((map__22186 == null)))?((((map__22186.cljs$lang$protocol_mask$partition0$ & (64))) || (map__22186.cljs$core$ISeq$))?true:false):false))?cljs.core.apply.cljs$core$IFn$_invoke$arity$2(cljs.core.hash_map,map__22186):map__22186);
var map__22187 = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__22186__$1,cljs.core.cst$kw$bound);
var map__22187__$1 = ((((!((map__22187 == null)))?((((map__22187.cljs$lang$protocol_mask$partition0$ & (64))) || (map__22187.cljs$core$ISeq$))?true:false):false))?cljs.core.apply.cljs$core$IFn$_invoke$arity$2(cljs.core.hash_map,map__22187):map__22187);
var crew_1 = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__22187__$1,cljs.core.cst$kw$crew_DASH_1);
var crew_2 = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__22187__$1,cljs.core.cst$kw$crew_DASH_2);
return new cljs.core.PersistentArrayMap(null, 4, [cljs.core.cst$kw$type,cljs.core.cst$kw$info,cljs.core.cst$kw$speaker,crew_1,cljs.core.cst$kw$text,new cljs.core.PersistentVector(null, 8, 5, cljs.core.PersistentVector.EMPTY_NODE, ["Y\u2019know, Cap\u2019n, ",cljs.core.cst$kw$shortname.cljs$core$IFn$_invoke$arity$1(crew_2)," and I don\u2019t always ",starfreighter.desc.r.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq(["agree on everything",new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, ["get along",starfreighter.desc.o(" so well")], null),"see eye-to-eye"], 0)),". But lately, I\u2019ve really been enjoying ",starfreighter.desc.r.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq(["having them around","having them around the ship","their company"], 0)),". ",starfreighter.desc.o(new cljs.core.PersistentVector(null, 7, 5, cljs.core.PersistentVector.EMPTY_NODE, [starfreighter.desc.o("It "),starfreighter.desc.o(starfreighter.desc.r.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq(["certainly","definitely"], 0)))," ",starfreighter.desc.r.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq(["helps keep","keeps"], 0))," ",starfreighter.desc.r.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq(["me from getting bored","me on my toes","the boredom away"], 0)),"!"], null))], null),cljs.core.cst$kw$ok,new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.cst$kw$add_DASH_memory,crew_1,cljs.core.cst$kw$got_DASH_along_DASH_with_DASH_crewmate], null),new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.cst$kw$add_DASH_memory,crew_2,cljs.core.cst$kw$got_DASH_along_DASH_with_DASH_crewmate], null)], null)], null);
})], null),new cljs.core.PersistentArrayMap(null, 5, [cljs.core.cst$kw$id,cljs.core.cst$kw$info_DASH_crew_DASH_unfriendly,cljs.core.cst$kw$prereq,(function (p1__22170_SHARP_){
return !(cljs.core.contains_QMARK_(cljs.core.cst$kw$recent_DASH_picks.cljs$core$IFn$_invoke$arity$1(p1__22170_SHARP_),cljs.core.cst$kw$info_DASH_crew_DASH_friendly));
}),cljs.core.cst$kw$bind,new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.cst$kw$annoyed,starfreighter.db.some_STAR_.cljs$core$IFn$_invoke$arity$1(starfreighter.db.crew)], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.cst$kw$annoyer,(function (p1__22171_SHARP_){
return starfreighter.db.some_where.cljs$core$IFn$_invoke$arity$3(p1__22171_SHARP_,cljs.core.partial.cljs$core$IFn$_invoke$arity$2(cljs.core.not_EQ_,cljs.core.cst$kw$annoyed.cljs$core$IFn$_invoke$arity$1(cljs.core.cst$kw$bound.cljs$core$IFn$_invoke$arity$1(p1__22171_SHARP_))),starfreighter.db.crew);
})], null)], null),cljs.core.cst$kw$weight,(function (p1__22172_SHARP_){
if((starfreighter.db.avg_crew_mood(p1__22172_SHARP_) <= (40))){
return (4);
} else {
return (2);
}
}),cljs.core.cst$kw$gen,(function (p__22190){
var map__22191 = p__22190;
var map__22191__$1 = ((((!((map__22191 == null)))?((((map__22191.cljs$lang$protocol_mask$partition0$ & (64))) || (map__22191.cljs$core$ISeq$))?true:false):false))?cljs.core.apply.cljs$core$IFn$_invoke$arity$2(cljs.core.hash_map,map__22191):map__22191);
var map__22192 = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__22191__$1,cljs.core.cst$kw$bound);
var map__22192__$1 = ((((!((map__22192 == null)))?((((map__22192.cljs$lang$protocol_mask$partition0$ & (64))) || (map__22192.cljs$core$ISeq$))?true:false):false))?cljs.core.apply.cljs$core$IFn$_invoke$arity$2(cljs.core.hash_map,map__22192):map__22192);
var annoyed = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__22192__$1,cljs.core.cst$kw$annoyed);
var annoyer = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__22192__$1,cljs.core.cst$kw$annoyer);
return new cljs.core.PersistentArrayMap(null, 4, [cljs.core.cst$kw$type,cljs.core.cst$kw$info,cljs.core.cst$kw$speaker,annoyed,cljs.core.cst$kw$text,new cljs.core.PersistentVector(null, 7, 5, cljs.core.PersistentVector.EMPTY_NODE, ["I can\u2019t stand it anymore. ",cljs.core.cst$kw$shortname.cljs$core$IFn$_invoke$arity$1(annoyer)," ",starfreighter.desc.r.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq(["is driving me","is going to drive me"], 0))," ",starfreighter.desc.r.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq(["crazy","insane","mad","nuts"], 0)),"!"], null),cljs.core.cst$kw$ok,new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.cst$kw$add_DASH_memory,annoyed,cljs.core.cst$kw$was_DASH_annoyed_DASH_by_DASH_crewmate], null),new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.cst$kw$add_DASH_memory,annoyer,cljs.core.cst$kw$annoyed_DASH_crewmate], null)], null)], null);
})], null),new cljs.core.PersistentArrayMap(null, 5, [cljs.core.cst$kw$id,cljs.core.cst$kw$info_DASH_crew_DASH_lonely,cljs.core.cst$kw$prereq,cljs.core.every_pred.cljs$core$IFn$_invoke$arity$2((function (p1__22173_SHARP_){
return cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(cljs.core.count(cljs.core.cst$kw$crew.cljs$core$IFn$_invoke$arity$1(p1__22173_SHARP_)),(1));
}),cljs.core.comp.cljs$core$IFn$_invoke$arity$2(cljs.core.empty_QMARK_,starfreighter.db.passengers)),cljs.core.cst$kw$bind,new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$complainer,starfreighter.db.some_STAR_.cljs$core$IFn$_invoke$arity$1(starfreighter.db.crew)], null),cljs.core.cst$kw$weight,cljs.core.constantly((2)),cljs.core.cst$kw$gen,(function (p__22195){
var map__22196 = p__22195;
var map__22196__$1 = ((((!((map__22196 == null)))?((((map__22196.cljs$lang$protocol_mask$partition0$ & (64))) || (map__22196.cljs$core$ISeq$))?true:false):false))?cljs.core.apply.cljs$core$IFn$_invoke$arity$2(cljs.core.hash_map,map__22196):map__22196);
var map__22197 = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__22196__$1,cljs.core.cst$kw$bound);
var map__22197__$1 = ((((!((map__22197 == null)))?((((map__22197.cljs$lang$protocol_mask$partition0$ & (64))) || (map__22197.cljs$core$ISeq$))?true:false):false))?cljs.core.apply.cljs$core$IFn$_invoke$arity$2(cljs.core.hash_map,map__22197):map__22197);
var complainer = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__22197__$1,cljs.core.cst$kw$complainer);
return new cljs.core.PersistentArrayMap(null, 4, [cljs.core.cst$kw$type,cljs.core.cst$kw$info,cljs.core.cst$kw$speaker,complainer,cljs.core.cst$kw$text,new cljs.core.PersistentVector(null, 4, 5, cljs.core.PersistentVector.EMPTY_NODE, ["Kinda ",starfreighter.desc.r.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq(["lonely","quiet"], 0))," around here, isn\u2019t it, Cap\u2019n? ","I\u2019m starting to think maybe we should hire on another crew member just for the company."], null),cljs.core.cst$kw$ok,new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.cst$kw$add_DASH_memory,complainer,cljs.core.cst$kw$felt_DASH_lonely], null)], null)], null);
})], null),new cljs.core.PersistentArrayMap(null, 5, [cljs.core.cst$kw$id,cljs.core.cst$kw$info_DASH_too_DASH_many_DASH_passengers,cljs.core.cst$kw$prereq,(function (p1__22174_SHARP_){
return (cljs.core.count(starfreighter.db.passengers(p1__22174_SHARP_)) > cljs.core.count(cljs.core.cst$kw$crew.cljs$core$IFn$_invoke$arity$1(p1__22174_SHARP_)));
}),cljs.core.cst$kw$bind,new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$complainer,starfreighter.db.some_STAR_.cljs$core$IFn$_invoke$arity$1(starfreighter.db.crew)], null),cljs.core.cst$kw$weight,(function (p1__22175_SHARP_){
var G__22200 = (2);
var G__22201 = (cljs.core.count(starfreighter.db.passengers(p1__22175_SHARP_)) - cljs.core.count(cljs.core.cst$kw$crew.cljs$core$IFn$_invoke$arity$1(p1__22175_SHARP_)));
return Math.pow(G__22200,G__22201);
}),cljs.core.cst$kw$gen,(function (p__22202){
var map__22203 = p__22202;
var map__22203__$1 = ((((!((map__22203 == null)))?((((map__22203.cljs$lang$protocol_mask$partition0$ & (64))) || (map__22203.cljs$core$ISeq$))?true:false):false))?cljs.core.apply.cljs$core$IFn$_invoke$arity$2(cljs.core.hash_map,map__22203):map__22203);
var state = map__22203__$1;
var map__22204 = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__22203__$1,cljs.core.cst$kw$bound);
var map__22204__$1 = ((((!((map__22204 == null)))?((((map__22204.cljs$lang$protocol_mask$partition0$ & (64))) || (map__22204.cljs$core$ISeq$))?true:false):false))?cljs.core.apply.cljs$core$IFn$_invoke$arity$2(cljs.core.hash_map,map__22204):map__22204);
var complainer = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__22204__$1,cljs.core.cst$kw$complainer);
var dest = cljs.core.cst$kw$name.cljs$core$IFn$_invoke$arity$1(starfreighter.db.current_dest(state));
return new cljs.core.PersistentArrayMap(null, 4, [cljs.core.cst$kw$type,cljs.core.cst$kw$info,cljs.core.cst$kw$speaker,complainer,cljs.core.cst$kw$text,new cljs.core.PersistentVector(null, 6, 5, cljs.core.PersistentVector.EMPTY_NODE, ["There are too many passengers on board this boat! ",starfreighter.desc.r.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([new cljs.core.PersistentVector(null, 4, 5, cljs.core.PersistentVector.EMPTY_NODE, ["I can\u2019t get any",starfreighter.desc.r.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([" shut-eye"," sleep","thing done"," work done"], 0)),starfreighter.desc.o(" with them around")," \u2013 they keep"], null),new cljs.core.PersistentVector(null, 6, 5, cljs.core.PersistentVector.EMPTY_NODE, ["It\u2019s impossible to get any",starfreighter.desc.r.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([" shut-eye"," sleep","thing done"," work done"], 0))," ",starfreighter.desc.o("around here "),"with them",starfreighter.desc.r.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([" always"," constantly",""], 0))], null),"They keep",new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, ["They\u2019re ",starfreighter.desc.r.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq(["always","constantly"], 0))], null)], 0))," ",starfreighter.desc.r.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq(["acting like tourists and","eating all the food and","hogging the bathroom and","stumbling around the corridors and",""], 0)),"getting underfoot. ",starfreighter.desc.r.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([new cljs.core.PersistentVector(null, 5, 5, cljs.core.PersistentVector.EMPTY_NODE, ["Can\u2019t wait until we can ",starfreighter.desc.o("finally")," let them off at ",dest,"."], null),"Dammit, Cap\u2019n, we\u2019re a trading vessel, not a cruise ship!",new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, ["I\u2019ll be so glad to see them go when we get to ",dest,"."], null),""], 0))], null),cljs.core.cst$kw$ok,new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.cst$kw$add_DASH_memory,complainer,cljs.core.cst$kw$was_DASH_annoyed_DASH_by_DASH_passenger], null)], null)], null);
})], null),new cljs.core.PersistentArrayMap(null, 4, [cljs.core.cst$kw$id,cljs.core.cst$kw$offer_DASH_passenger_DASH_use_DASH_crew_DASH_bedspace,cljs.core.cst$kw$bind,new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$passenger,starfreighter.db.some_STAR_.cljs$core$IFn$_invoke$arity$1(starfreighter.db.passengers)], null),cljs.core.cst$kw$weight,cljs.core.comp.cljs$core$IFn$_invoke$arity$2(cljs.core.count,starfreighter.db.passengers),cljs.core.cst$kw$gen,(function (p__22207){
var map__22208 = p__22207;
var map__22208__$1 = ((((!((map__22208 == null)))?((((map__22208.cljs$lang$protocol_mask$partition0$ & (64))) || (map__22208.cljs$core$ISeq$))?true:false):false))?cljs.core.apply.cljs$core$IFn$_invoke$arity$2(cljs.core.hash_map,map__22208):map__22208);
var state = map__22208__$1;
var map__22209 = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__22208__$1,cljs.core.cst$kw$bound);
var map__22209__$1 = ((((!((map__22209 == null)))?((((map__22209.cljs$lang$protocol_mask$partition0$ & (64))) || (map__22209.cljs$core$ISeq$))?true:false):false))?cljs.core.apply.cljs$core$IFn$_invoke$arity$2(cljs.core.hash_map,map__22209):map__22209);
var passenger = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__22209__$1,cljs.core.cst$kw$passenger);
var tip = (500);
return new cljs.core.PersistentArrayMap(null, 5, [cljs.core.cst$kw$type,cljs.core.cst$kw$yes_DASH_no,cljs.core.cst$kw$speaker,passenger,cljs.core.cst$kw$text,new cljs.core.PersistentVector(null, 7, 5, cljs.core.PersistentVector.EMPTY_NODE, ["Excuse me, Captain. The passenger quarters are kind of uncomfortable, ","and I haven\u2019t been able to get a lot of sleep. Could I maybe move over ","to the crew quarters for the rest of the voyage? I\u2019d be willing to ",starfreighter.desc.r.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq(["compensate you","pay you a little extra"], 0))," \u2013 ",new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.cst$kw$cash,tip], null),", say \u2013 for your trouble."], null),cljs.core.cst$kw$yes,new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.cst$kw$earn,tip], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.cst$kw$add_DASH_whole_DASH_crew_DASH_memory,cljs.core.cst$kw$was_DASH_inconvenienced_DASH_by_DASH_passenger], null)], null),cljs.core.cst$kw$no,cljs.core.PersistentVector.EMPTY], null);
})], null),new cljs.core.PersistentArrayMap(null, 5, [cljs.core.cst$kw$id,cljs.core.cst$kw$offer_DASH_passenger_DASH_join_DASH_crew,cljs.core.cst$kw$prereq,cljs.core.every_pred.cljs$core$IFn$_invoke$arity$3(starfreighter.db.can_hold_more_crew_QMARK_,(function (p1__22176_SHARP_){
return (starfreighter.db.avg_crew_mood(p1__22176_SHARP_) >= (60));
}),starfreighter.db.can_afford_QMARK_.cljs$core$IFn$_invoke$arity$1((20))),cljs.core.cst$kw$bind,new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$passenger,starfreighter.db.some_STAR_.cljs$core$IFn$_invoke$arity$1(starfreighter.db.passengers)], null),cljs.core.cst$kw$weight,(function (p1__22177_SHARP_){
return (starfreighter.db.open_crew_slots(p1__22177_SHARP_) + starfreighter.util.bucket(starfreighter.db.avg_crew_mood(p1__22177_SHARP_),new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [(75),(1)], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [(90),(2)], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [(100),(3)], null)], null)));
}),cljs.core.cst$kw$gen,(function (p__22212){
var map__22213 = p__22212;
var map__22213__$1 = ((((!((map__22213 == null)))?((((map__22213.cljs$lang$protocol_mask$partition0$ & (64))) || (map__22213.cljs$core$ISeq$))?true:false):false))?cljs.core.apply.cljs$core$IFn$_invoke$arity$2(cljs.core.hash_map,map__22213):map__22213);
var state = map__22213__$1;
var map__22214 = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__22213__$1,cljs.core.cst$kw$bound);
var map__22214__$1 = ((((!((map__22214 == null)))?((((map__22214.cljs$lang$protocol_mask$partition0$ & (64))) || (map__22214.cljs$core$ISeq$))?true:false):false))?cljs.core.apply.cljs$core$IFn$_invoke$arity$2(cljs.core.hash_map,map__22214):map__22214);
var passenger = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__22214__$1,cljs.core.cst$kw$passenger);
return new cljs.core.PersistentArrayMap(null, 5, [cljs.core.cst$kw$type,cljs.core.cst$kw$yes_DASH_no,cljs.core.cst$kw$speaker,passenger,cljs.core.cst$kw$text,new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, ["Seems like you could really use an extra pair of hands around here, Captain. ","And I am looking for work\u2026 d\u2019you think there might be a place for me in your crew?"], null),cljs.core.cst$kw$yes,new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.cst$kw$add_DASH_crew,passenger], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.cst$kw$drop_DASH_cargo,passenger], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.cst$kw$spend,(2000)], null)], null),cljs.core.cst$kw$no,cljs.core.PersistentVector.EMPTY], null);
})], null),new cljs.core.PersistentArrayMap(null, 4, [cljs.core.cst$kw$id,cljs.core.cst$kw$info_DASH_arrived,cljs.core.cst$kw$prereq,(function (p1__22178_SHARP_){
return (cljs.core.count(cljs.core.cst$kw$recent_DASH_picks.cljs$core$IFn$_invoke$arity$1(p1__22178_SHARP_)) > (0));
}),cljs.core.cst$kw$weight,(function (p1__22179_SHARP_){
return starfreighter.util.bucket(cljs.core.count(cljs.core.cst$kw$recent_DASH_picks.cljs$core$IFn$_invoke$arity$1(p1__22179_SHARP_)),new cljs.core.PersistentVector(null, 4, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [(3),(4)], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [(5),(6)], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [(7),(8)], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [(100),(16)], null)], null));
}),cljs.core.cst$kw$gen,(function (state){
return new cljs.core.PersistentArrayMap(null, 4, [cljs.core.cst$kw$type,cljs.core.cst$kw$info,cljs.core.cst$kw$speaker,starfreighter.db.some_STAR_.cljs$core$IFn$_invoke$arity$2(state,starfreighter.db.crew),cljs.core.cst$kw$text,new cljs.core.PersistentVector(null, 4, 5, cljs.core.PersistentVector.EMPTY_NODE, [starfreighter.desc.r.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq(["Looks like we made it","Looks like we made it in one piece","Made it in one piece"], 0)),", Cap\u2019n! Now approaching ",cljs.core.cst$kw$name.cljs$core$IFn$_invoke$arity$1(starfreighter.db.current_dest(state)),"."], null),cljs.core.cst$kw$ok,new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.cst$kw$begin_DASH_arrival], null)], null)], null);
})], null)], null);
