{:rename-macros {}, :renames {}, :use-macros {defcurried starfreighter.util}, :excludes #{rand-int rand-nth shuffle rand}, :name starfreighter.cards.gambling, :imports nil, :requires {db starfreighter.db, starfreighter.db starfreighter.db, starfreighter.desc starfreighter.desc, rand starfreighter.rand, starfreighter.rand starfreighter.rand, starfreighter.util starfreighter.util}, :uses {r starfreighter.desc, o starfreighter.desc}, :defs {base-bet-amount {:name starfreighter.cards.gambling/base-bet-amount, :file "/Users/mkremins/Projects/starfreighter/src/starfreighter/cards/gambling.cljs", :line 8, :column 1, :end-line 8, :end-column 31, :private true, :meta {:file "/Users/mkremins/Projects/starfreighter/src/starfreighter/cards/gambling.cljs", :line 8, :column 16, :end-line 8, :end-column 31, :private true}}, can-keep-playing? {:name starfreighter.cards.gambling/can-keep-playing?, :file "/Users/mkremins/Projects/starfreighter/src/starfreighter/cards/gambling.cljs", :line 9, :column 1, :end-line 9, :end-column 33, :private true, :meta {:file "/Users/mkremins/Projects/starfreighter/src/starfreighter/cards/gambling.cljs", :line 9, :column 16, :end-line 9, :end-column 33, :private true}}, gen-walk-away-card {:protocol-inline nil, :meta {:file "/Users/mkremins/Projects/starfreighter/src/starfreighter/cards/gambling.cljs", :line 11, :column 8, :end-line 11, :end-column 26, :private true, :arglists (quote ([{:keys [gambling-info], :as state}]))}, :private true, :name starfreighter.cards.gambling/gen-walk-away-card, :variadic false, :file "/Users/mkremins/Projects/starfreighter/src/starfreighter/cards/gambling.cljs", :end-column 26, :method-params ([p__7599]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 11, :end-line 11, :max-fixed-arity 1, :fn-var true, :arglists (quote ([{:keys [gambling-info], :as state}]))}, gen-keep-playing-card {:protocol-inline nil, :meta {:file "/Users/mkremins/Projects/starfreighter/src/starfreighter/cards/gambling.cljs", :line 23, :column 13, :end-line 23, :end-column 34, :arglists (quote ([text] [state text])), :top-fn {:variadic false, :max-fixed-arity 2, :method-params ([text] [state text]), :arglists ([text] [state text]), :arglists-meta (nil nil)}}, :name starfreighter.cards.gambling/gen-keep-playing-card, :variadic false, :file "/Users/mkremins/Projects/starfreighter/src/starfreighter/cards/gambling.cljs", :end-column 34, :top-fn {:variadic false, :max-fixed-arity 2, :method-params ([text] [state text]), :arglists ([text] [state text]), :arglists-meta (nil nil)}, :method-params ([text] [state text]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 23, :end-line 23, :max-fixed-arity 2, :fn-var true, :arglists ([text] [state text])}, gambling-deck {:name starfreighter.cards.gambling/gambling-deck, :file "/Users/mkremins/Projects/starfreighter/src/starfreighter/cards/gambling.cljs", :line 31, :column 1, :end-line 31, :end-column 29, :private true, :meta {:file "/Users/mkremins/Projects/starfreighter/src/starfreighter/cards/gambling.cljs", :line 31, :column 16, :end-line 31, :end-column 29, :private true}}, cards {:name starfreighter.cards.gambling/cards, :file "/Users/mkremins/Projects/starfreighter/src/starfreighter/cards/gambling.cljs", :line 83, :column 1, :end-line 83, :end-column 11, :meta {:file "/Users/mkremins/Projects/starfreighter/src/starfreighter/cards/gambling.cljs", :line 83, :column 6, :end-line 83, :end-column 11}}}, :require-macros {starfreighter.util starfreighter.util}, :cljs.analyzer/constants {:seen #{:gambling :broke-even :did-well :yes :earn :gambling-info :repeatable? :went-gambling-did-well :did-poorly :else :call :gen :roll-the-dice :name :spend :init-cash :type :icon :cash :prereq :just-earned :bound :unset-deck :weight :id :ok :went-gambling-broke-even :set-deck :info :add-memory :cant-afford :request-gambling :speaker :yes-no :set-next-card :no :bind :went-gambling-did-poorly :text}, :order [:gambling-info :type :speaker :text :ok :info :name :add-memory :init-cash :cash :went-gambling-did-poorly :went-gambling-broke-even :else :went-gambling-did-well :call :unset-deck :yes :no :yes-no :spend :just-earned :set-next-card :id :prereq :weight :gen :cant-afford :repeatable? :roll-the-dice :icon :earn :did-well :broke-even :did-poorly :bind :request-gambling :gambling :bound :set-deck]}, :doc nil}