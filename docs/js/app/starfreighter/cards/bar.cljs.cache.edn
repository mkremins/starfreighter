{:rename-macros {}, :renames {}, :use-macros {}, :excludes #{rand-int rand-nth shuffle rand}, :name starfreighter.cards.bar, :imports nil, :requires {db starfreighter.db, starfreighter.db starfreighter.db, gen starfreighter.gen, starfreighter.gen starfreighter.gen, rand starfreighter.rand, starfreighter.rand starfreighter.rand}, :uses {rand-nth starfreighter.rand}, :defs {some-conscious-crew {:name starfreighter.cards.bar/some-conscious-crew, :file "/Users/mkremins/Projects/starfreighter/src/starfreighter/cards/bar.cljs", :line 12, :column 1, :end-line 12, :end-column 25, :meta {:file "/Users/mkremins/Projects/starfreighter/src/starfreighter/cards/bar.cljs", :line 12, :column 6, :end-line 12, :end-column 25}}, some-conscious-opponent {:protocol-inline nil, :meta {:file "/Users/mkremins/Projects/starfreighter/src/starfreighter/cards/bar.cljs", :line 15, :column 7, :end-line 15, :end-column 30, :arglists (quote ([state]))}, :name starfreighter.cards.bar/some-conscious-opponent, :variadic false, :file "/Users/mkremins/Projects/starfreighter/src/starfreighter/cards/bar.cljs", :end-column 30, :method-params ([state]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 15, :end-line 15, :max-fixed-arity 1, :fn-var true, :arglists (quote ([state]))}, recover-if-unconscious {:protocol-inline nil, :meta {:file "/Users/mkremins/Projects/starfreighter/src/starfreighter/cards/bar.cljs", :line 18, :column 7, :end-line 18, :end-column 29, :arglists (quote ([char]))}, :name starfreighter.cards.bar/recover-if-unconscious, :variadic false, :file "/Users/mkremins/Projects/starfreighter/src/starfreighter/cards/bar.cljs", :end-column 29, :method-params ([char]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 18, :end-line 18, :max-fixed-arity 1, :fn-var true, :arglists (quote ([char]))}, init-fight {:protocol-inline nil, :meta {:file "/Users/mkremins/Projects/starfreighter/src/starfreighter/cards/bar.cljs", :line 23, :column 7, :end-line 23, :end-column 17, :arglists (quote ([state]))}, :name starfreighter.cards.bar/init-fight, :variadic false, :file "/Users/mkremins/Projects/starfreighter/src/starfreighter/cards/bar.cljs", :end-column 17, :method-params ([state]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 23, :end-line 23, :max-fixed-arity 1, :fn-var true, :arglists (quote ([state]))}, bar-fight-deck {:name starfreighter.cards.bar/bar-fight-deck, :file "/Users/mkremins/Projects/starfreighter/src/starfreighter/cards/bar.cljs", :line 27, :column 1, :end-line 27, :end-column 20, :meta {:file "/Users/mkremins/Projects/starfreighter/src/starfreighter/cards/bar.cljs", :line 27, :column 6, :end-line 27, :end-column 20}}, cards {:name starfreighter.cards.bar/cards, :file "/Users/mkremins/Projects/starfreighter/src/starfreighter/cards/bar.cljs", :line 84, :column 1, :end-line 84, :end-column 11, :meta {:file "/Users/mkremins/Projects/starfreighter/src/starfreighter/cards/bar.cljs", :line 84, :column 6, :end-line 84, :end-column 11}}}, :require-macros nil, :cljs.analyzer/constants {:seen #{:deadly? :they-win :add-whole-crew-memory :won-bar-fight :yes :opponents :repeatable? :prohibition :call :gen :last-hitter :went-out-drinking :roll-the-dice :name :spend :hit-with-object :background :type :custom :update-all-crew :choices :icon :prereq :injured :recent-picks :request-drinking :bound :unset-deck :weight :get-hit-with-object :add-trait :backed-down-from-bar-fight :id :effects :ok :set-deck :info :add-memory :shortname :you-win :game-over :target :speaker :unconscious :hitter :yes-no :set-next-card :fight-info :no :bind :text}, :order [:fight-info :opponents :unconscious :injured :name :id :prereq :weight :gen :you-win :last-hitter :type :speaker :text :ok :info :call :unset-deck :add-whole-crew-memory :won-bar-fight :update-all-crew :they-win :deadly? :game-over :repeatable? :bind :hit-with-object :hitter :target :bound :icon :shortname :get-hit-with-object :add-trait :request-drinking :prohibition :set-deck :add-memory :backed-down-from-bar-fight :yes :no :yes-no :set-next-card :recent-picks :roll-the-dice :went-out-drinking :choices :custom :background :effects :spend]}, :doc nil}