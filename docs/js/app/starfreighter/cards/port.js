// Compiled by ClojureScript 1.9.227 {:static-fns true, :optimize-constants true}
goog.provide('starfreighter.cards.port');
goog.require('cljs.core');
goog.require('starfreighter.db');
goog.require('starfreighter.desc');
goog.require('starfreighter.gen');
goog.require('starfreighter.util');
starfreighter.cards.port.base_bonus_amount = (5000);
starfreighter.cards.port.hire_price = (10000);
starfreighter.cards.port.repair_price = (20000);
starfreighter.cards.port.upgrade_price = (30000);
starfreighter.cards.port.cards = new cljs.core.PersistentVector(null, 12, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.PersistentArrayMap(null, 6, [cljs.core.cst$kw$id,cljs.core.cst$kw$job_DASH_deliver_DASH_cargo,cljs.core.cst$kw$repeatable_QMARK_,true,cljs.core.cst$kw$prereq,starfreighter.db.can_hold_more_cargo_QMARK_,cljs.core.cst$kw$bind,new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$cargo,starfreighter.gen.gen_normal_delivery_job], null),cljs.core.cst$kw$weight,(function (p1__22250_SHARP_){
return ((4) * starfreighter.db.open_cargo_slots(p1__22250_SHARP_));
}),cljs.core.cst$kw$gen,(function (p__22270){
var map__22271 = p__22270;
var map__22271__$1 = ((((!((map__22271 == null)))?((((map__22271.cljs$lang$protocol_mask$partition0$ & (64))) || (map__22271.cljs$core$ISeq$))?true:false):false))?cljs.core.apply.cljs$core$IFn$_invoke$arity$2(cljs.core.hash_map,map__22271):map__22271);
var state = map__22271__$1;
var map__22272 = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__22271__$1,cljs.core.cst$kw$bound);
var map__22272__$1 = ((((!((map__22272 == null)))?((((map__22272.cljs$lang$protocol_mask$partition0$ & (64))) || (map__22272.cljs$core$ISeq$))?true:false):false))?cljs.core.apply.cljs$core$IFn$_invoke$arity$2(cljs.core.hash_map,map__22272):map__22272);
var cargo = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__22272__$1,cljs.core.cst$kw$cargo);
var map__22275 = cargo;
var map__22275__$1 = ((((!((map__22275 == null)))?((((map__22275.cljs$lang$protocol_mask$partition0$ & (64))) || (map__22275.cljs$core$ISeq$))?true:false):false))?cljs.core.apply.cljs$core$IFn$_invoke$arity$2(cljs.core.hash_map,map__22275):map__22275);
var dest = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__22275__$1,cljs.core.cst$kw$destination);
var pay_before = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__22275__$1,cljs.core.cst$kw$pay_DASH_before);
var stuff = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__22275__$1,cljs.core.cst$kw$name);
var pay = new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.cst$kw$cash,(pay_before + cljs.core.cst$kw$pay_DASH_after.cljs$core$IFn$_invoke$arity$1(cargo))], null);
return new cljs.core.PersistentArrayMap(null, 5, [cljs.core.cst$kw$type,cljs.core.cst$kw$yes_DASH_no,cljs.core.cst$kw$speaker,cljs.core.cst$kw$merchant.cljs$core$IFn$_invoke$arity$1(cargo),cljs.core.cst$kw$text,new cljs.core.PersistentVector(null, 10, 5, cljs.core.PersistentVector.EMPTY_NODE, [starfreighter.desc.r.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq(["I\u2019d like to enlist your services","I\u2019ve got a job for you","I have a job for you"], 0)),", Captain. Can you deliver this shipment of ",stuff," to",new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.cst$kw$link,new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.cst$kw$places,dest], null)], null),"?",(((pay_before > (0)))?new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [starfreighter.desc.r.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, ["I\u2019ll pay you ",pay," \u2013 half now"], null),new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, ["Payment will be ",pay," \u2013 half up front"], null),new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, ["You\u2019ll be paid ",pay," \u2013 half the pay now"], null)], 0)),", and ",starfreighter.desc.r.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq(["half","the rest"], 0))], null):new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, ["Pay will be ",pay,", to be paid in full"], null))," ",starfreighter.desc.r.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, ["upon successful delivery of the ",stuff], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, ["upon your arrival at ",dest], null),new cljs.core.PersistentVector(null, 4, 5, cljs.core.PersistentVector.EMPTY_NODE, ["when you arrive at ",dest," with the ",stuff], null),new cljs.core.PersistentVector(null, 4, 5, cljs.core.PersistentVector.EMPTY_NODE, ["when you drop the ",stuff," off at ",dest], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, ["when you make it to ",dest], null)], 0)),"."], null),cljs.core.cst$kw$yes,new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.cst$kw$add_DASH_cargo,cargo], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.cst$kw$earn,pay_before], null)], null),cljs.core.cst$kw$no,cljs.core.PersistentVector.EMPTY], null);
})], null),new cljs.core.PersistentArrayMap(null, 6, [cljs.core.cst$kw$id,cljs.core.cst$kw$job_DASH_deliver_DASH_passenger,cljs.core.cst$kw$repeatable_QMARK_,true,cljs.core.cst$kw$prereq,starfreighter.db.can_hold_more_cargo_QMARK_,cljs.core.cst$kw$bind,new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$char,starfreighter.gen.gen_passenger_delivery_job], null),cljs.core.cst$kw$weight,cljs.core.constantly((4)),cljs.core.cst$kw$gen,(function (p__22277){
var map__22278 = p__22277;
var map__22278__$1 = ((((!((map__22278 == null)))?((((map__22278.cljs$lang$protocol_mask$partition0$ & (64))) || (map__22278.cljs$core$ISeq$))?true:false):false))?cljs.core.apply.cljs$core$IFn$_invoke$arity$2(cljs.core.hash_map,map__22278):map__22278);
var state = map__22278__$1;
var map__22279 = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__22278__$1,cljs.core.cst$kw$bound);
var map__22279__$1 = ((((!((map__22279 == null)))?((((map__22279.cljs$lang$protocol_mask$partition0$ & (64))) || (map__22279.cljs$core$ISeq$))?true:false):false))?cljs.core.apply.cljs$core$IFn$_invoke$arity$2(cljs.core.hash_map,map__22279):map__22279);
var char$ = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__22279__$1,cljs.core.cst$kw$char);
var fare = cljs.core.cst$kw$pay_DASH_before.cljs$core$IFn$_invoke$arity$1(char$);
return new cljs.core.PersistentArrayMap(null, 5, [cljs.core.cst$kw$type,cljs.core.cst$kw$yes_DASH_no,cljs.core.cst$kw$speaker,char$,cljs.core.cst$kw$text,new cljs.core.PersistentVector(null, 7, 5, cljs.core.PersistentVector.EMPTY_NODE, ["I\u2019m in need of safe passage to ",new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.cst$kw$link,new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.cst$kw$places,cljs.core.cst$kw$destination.cljs$core$IFn$_invoke$arity$1(char$)], null)], null),". Can you take me there? I don\u2019t have much, but ",starfreighter.desc.r.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq(["I can offer you","I\u2019ve saved up"], 0)),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.cst$kw$cash,fare], null),"\u2013 ",starfreighter.desc.r.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq(["hopefully that\u2019ll be enough.","I do hope that\u2019s enough.","that should be enough, right?","that\u2019s about standard, right?"], 0))], null),cljs.core.cst$kw$yes,new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.cst$kw$add_DASH_cargo,char$], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.cst$kw$earn,fare], null)], null),cljs.core.cst$kw$no,cljs.core.PersistentVector.EMPTY], null);
})], null),new cljs.core.PersistentArrayMap(null, 5, [cljs.core.cst$kw$id,cljs.core.cst$kw$offer_DASH_buy_DASH_cargo,cljs.core.cst$kw$repeatable_QMARK_,true,cljs.core.cst$kw$bind,new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.cst$kw$item,starfreighter.db.some_sellable_cargo], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.cst$kw$buyer,starfreighter.db.some_trusting_merchant], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.cst$kw$import_QMARK_,(function (p1__22251_SHARP_){
return cljs.core.contains_QMARK_(cljs.core.cst$kw$imports.cljs$core$IFn$_invoke$arity$1(starfreighter.db.current_place(p1__22251_SHARP_)),cljs.core.cst$kw$name.cljs$core$IFn$_invoke$arity$1(starfreighter.db.var_STAR_.cljs$core$IFn$_invoke$arity$2(p1__22251_SHARP_,cljs.core.cst$kw$item)));
})], null)], null),cljs.core.cst$kw$weight,(function (p1__22252_SHARP_){
var G__22282 = (4);
if(cljs.core.truth_(starfreighter.db.var_STAR_.cljs$core$IFn$_invoke$arity$2(p1__22252_SHARP_,cljs.core.cst$kw$import_QMARK_))){
return (G__22282 * (2));
} else {
return G__22282;
}
}),cljs.core.cst$kw$gen,(function (p__22283){
var map__22284 = p__22283;
var map__22284__$1 = ((((!((map__22284 == null)))?((((map__22284.cljs$lang$protocol_mask$partition0$ & (64))) || (map__22284.cljs$core$ISeq$))?true:false):false))?cljs.core.apply.cljs$core$IFn$_invoke$arity$2(cljs.core.hash_map,map__22284):map__22284);
var state = map__22284__$1;
var map__22285 = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__22284__$1,cljs.core.cst$kw$bound);
var map__22285__$1 = ((((!((map__22285 == null)))?((((map__22285.cljs$lang$protocol_mask$partition0$ & (64))) || (map__22285.cljs$core$ISeq$))?true:false):false))?cljs.core.apply.cljs$core$IFn$_invoke$arity$2(cljs.core.hash_map,map__22285):map__22285);
var buyer = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__22285__$1,cljs.core.cst$kw$buyer);
var import_QMARK_ = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__22285__$1,cljs.core.cst$kw$import_QMARK_);
var item = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__22285__$1,cljs.core.cst$kw$item);
var stuff = cljs.core.cst$kw$name.cljs$core$IFn$_invoke$arity$1(item);
var amount = ((cljs.core.truth_(import_QMARK_)?(30):(20)) * (1000));
return new cljs.core.PersistentArrayMap(null, 5, [cljs.core.cst$kw$type,cljs.core.cst$kw$yes_DASH_no,cljs.core.cst$kw$speaker,buyer,cljs.core.cst$kw$text,new cljs.core.PersistentVector(null, 7, 5, cljs.core.PersistentVector.EMPTY_NODE, [starfreighter.desc.r.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq(["Greetings","Hello"], 0)),", Captain. I\u2019m ",starfreighter.desc.r.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq(["in the market","looking"], 0))," to buy some ",stuff,", and it looks like you\u2019ve got some for sale. ",starfreighter.desc.r.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, ["How does",new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.cst$kw$cash,amount], null),"sound to you?"], null),new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, ["I can offer you",new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.cst$kw$cash,amount], null),"\u2013 sound like a deal?"], null)], 0))], null),cljs.core.cst$kw$yes,new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.cst$kw$earn,amount], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.cst$kw$drop_DASH_cargo,item], null),(cljs.core.truth_(cljs.core.cst$kw$counterfeit_QMARK_.cljs$core$IFn$_invoke$arity$1(item))?new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.cst$kw$set_DASH_next_DASH_card,new cljs.core.PersistentArrayMap(null, 4, [cljs.core.cst$kw$type,cljs.core.cst$kw$info,cljs.core.cst$kw$speaker,buyer,cljs.core.cst$kw$text,new cljs.core.PersistentVector(null, 5, 5, cljs.core.PersistentVector.EMPTY_NODE, [starfreighter.desc.r.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq(["Hey\u2026","Hey, hold on a second\u2026","Hey, wait a minute\u2026"], 0)),starfreighter.desc.r.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq(["are you trying to pull one over on me",new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [starfreighter.desc.o("just "),"who do you think you\u2019re fooling"], null),"what\u2019re you trying to pull"], 0)),"? This ",stuff," is counterfeit! I demand a refund!"], null),cljs.core.cst$kw$ok,new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.cst$kw$spend,amount], null),new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.cst$kw$add_DASH_memory,buyer,cljs.core.cst$kw$tried_DASH_sell_DASH_counterfeit_DASH_goods], null)], null)], null)], null):new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.cst$kw$add_DASH_memory,buyer,cljs.core.cst$kw$sold_DASH_goods], null))], null),cljs.core.cst$kw$no,cljs.core.PersistentVector.EMPTY], null);
})], null),new cljs.core.PersistentArrayMap(null, 6, [cljs.core.cst$kw$id,cljs.core.cst$kw$offer_DASH_sell_DASH_cargo,cljs.core.cst$kw$repeatable_QMARK_,true,cljs.core.cst$kw$prereq,starfreighter.db.can_hold_more_cargo_QMARK_,cljs.core.cst$kw$bind,new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.cst$kw$item,starfreighter.gen.gen_goods_for_sale], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.cst$kw$_,(function (p1__22253_SHARP_){
return starfreighter.db.enforce.cljs$core$IFn$_invoke$arity$2(p1__22253_SHARP_,starfreighter.db.can_afford_QMARK_.cljs$core$IFn$_invoke$arity$1(cljs.core.cst$kw$price.cljs$core$IFn$_invoke$arity$1(starfreighter.db.var_STAR_.cljs$core$IFn$_invoke$arity$2(p1__22253_SHARP_,cljs.core.cst$kw$item))));
})], null)], null),cljs.core.cst$kw$weight,starfreighter.db.open_cargo_slots,cljs.core.cst$kw$gen,(function (p__22288){
var map__22289 = p__22288;
var map__22289__$1 = ((((!((map__22289 == null)))?((((map__22289.cljs$lang$protocol_mask$partition0$ & (64))) || (map__22289.cljs$core$ISeq$))?true:false):false))?cljs.core.apply.cljs$core$IFn$_invoke$arity$2(cljs.core.hash_map,map__22289):map__22289);
var state = map__22289__$1;
var map__22290 = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__22289__$1,cljs.core.cst$kw$bound);
var map__22290__$1 = ((((!((map__22290 == null)))?((((map__22290.cljs$lang$protocol_mask$partition0$ & (64))) || (map__22290.cljs$core$ISeq$))?true:false):false))?cljs.core.apply.cljs$core$IFn$_invoke$arity$2(cljs.core.hash_map,map__22290):map__22290);
var item = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__22290__$1,cljs.core.cst$kw$item);
var map__22293 = item;
var map__22293__$1 = ((((!((map__22293 == null)))?((((map__22293.cljs$lang$protocol_mask$partition0$ & (64))) || (map__22293.cljs$core$ISeq$))?true:false):false))?cljs.core.apply.cljs$core$IFn$_invoke$arity$2(cljs.core.hash_map,map__22293):map__22293);
var stuff = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__22293__$1,cljs.core.cst$kw$name);
var price = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__22293__$1,cljs.core.cst$kw$price);
var seller = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__22293__$1,cljs.core.cst$kw$seller);
return new cljs.core.PersistentArrayMap(null, 5, [cljs.core.cst$kw$type,cljs.core.cst$kw$yes_DASH_no,cljs.core.cst$kw$speaker,seller,cljs.core.cst$kw$text,new cljs.core.PersistentVector(null, 12, 5, cljs.core.PersistentVector.EMPTY_NODE, ["Looking for ",stuff,"? ",starfreighter.desc.r.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([new cljs.core.PersistentVector(null, 4, 5, cljs.core.PersistentVector.EMPTY_NODE, [starfreighter.desc.o("Boy howdy, "),"have I got a ",starfreighter.desc.o("great "),"deal for you"], null),"How fortunate you are","It\u2019s your lucky day","Well, you\u2019re in luck","Well, you\u2019ve come to the right place",new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, ["What incredible ",starfreighter.desc.r.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq(["fortune","luck"], 0))], null)], 0)),"! I\u2019m currently selling ",stuff," for ",starfreighter.desc.r.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq(["just","only"], 0)),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.cst$kw$cash,price], null),starfreighter.desc.r.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq(["a pop","per unit"], 0)),starfreighter.desc.r.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [" \u2013 the lowest price you\u2019ll get this side of ",starfreighter.db.rand_destination(state)], null),new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [". With prices like these, I\u2019m practically giving this ",stuff," away"], null)], 0)),starfreighter.desc.r.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([".","!"], 0))], null),cljs.core.cst$kw$yes,new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.cst$kw$add_DASH_cargo,item], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.cst$kw$spend,price], null),new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.cst$kw$add_DASH_memory,seller,cljs.core.cst$kw$bought_DASH_goods], null)], null),cljs.core.cst$kw$no,cljs.core.PersistentVector.EMPTY], null);
})], null),new cljs.core.PersistentArrayMap(null, 5, [cljs.core.cst$kw$id,cljs.core.cst$kw$offer_DASH_join_DASH_crew,cljs.core.cst$kw$repeatable_QMARK_,true,cljs.core.cst$kw$prereq,cljs.core.every_pred.cljs$core$IFn$_invoke$arity$2(starfreighter.db.can_hold_more_crew_QMARK_,starfreighter.db.can_afford_QMARK_.cljs$core$IFn$_invoke$arity$1(starfreighter.cards.port.hire_price)),cljs.core.cst$kw$weight,starfreighter.db.open_crew_slots,cljs.core.cst$kw$gen,(function (state){
var char$ = starfreighter.gen.gen_local_character.cljs$core$IFn$_invoke$arity$1(state);
return new cljs.core.PersistentArrayMap(null, 5, [cljs.core.cst$kw$type,cljs.core.cst$kw$yes_DASH_no,cljs.core.cst$kw$speaker,char$,cljs.core.cst$kw$text,new cljs.core.PersistentVector(null, 8, 5, cljs.core.PersistentVector.EMPTY_NODE, [starfreighter.desc.r.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq(["Excuse me, Captain.","I\u2019m looking for work, Captain.","You\u2019re a spacer, right?",""], 0)),starfreighter.desc.r.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq(["Any chance you\u2019d have","Do you have","Do you think there might be","Have you got","Is there by any chance","Might there be","Might you have"], 0))," ",starfreighter.desc.r.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq(["a place","a use","room"], 0))," for ",starfreighter.desc.o("someone like "),"me in your crew?",(cljs.core.truth_((starfreighter.db.fighter_QMARK_.cljs$core$IFn$_invoke$arity$1 ? starfreighter.db.fighter_QMARK_.cljs$core$IFn$_invoke$arity$1(char$) : starfreighter.db.fighter_QMARK_.call(null,char$)))?new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, ["I\u2019m not much of a deep thinker, but I can hold my own in a ",starfreighter.desc.r.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq(["fight","scrap"], 0)),"."], null):(cljs.core.truth_((starfreighter.db.mechanic_QMARK_.cljs$core$IFn$_invoke$arity$1 ? starfreighter.db.mechanic_QMARK_.cljs$core$IFn$_invoke$arity$1(char$) : starfreighter.db.mechanic_QMARK_.call(null,char$)))?new cljs.core.PersistentVector(null, 5, 5, cljs.core.PersistentVector.EMPTY_NODE, ["If there\u2019s one thing ",starfreighter.desc.r.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq(["I know","I\u2019m good at"], 0)),", it\u2019s fixing spaceships. I grew up around them, so I\u2019ve been ",starfreighter.desc.r.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq(["at it","doing it","learning","practicing"], 0))," my whole life."], null):(cljs.core.truth_((starfreighter.db.medic_QMARK_.cljs$core$IFn$_invoke$arity$1 ? starfreighter.db.medic_QMARK_.cljs$core$IFn$_invoke$arity$1(char$) : starfreighter.db.medic_QMARK_.call(null,char$)))?new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, ["I don\u2019t have any formal medical training, but ",starfreighter.desc.r.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq(["I know","I\u2019ve picked up"], 0))," enough to patch people up and keep them going after a close scrape."], null):starfreighter.desc.o(new cljs.core.PersistentVector(null, 6, 5, cljs.core.PersistentVector.EMPTY_NODE, [starfreighter.desc.r.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq(["I don\u2019t have any","I don\u2019t have much in the way of","I haven\u2019t got any","I\u2019ve got no","I\u2019ve not got much in the way of"], 0))," special skills ",starfreighter.desc.r.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq(["or anything","or anything like that",""], 0)),", but I\u2019m a hard worker and I\u2019m ",starfreighter.desc.r.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq(["eager","willing"], 0))," to learn."], null))
)))], null),cljs.core.cst$kw$yes,new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.cst$kw$add_DASH_crew,char$], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.cst$kw$spend,starfreighter.cards.port.hire_price], null)], null),cljs.core.cst$kw$no,cljs.core.PersistentVector.EMPTY], null);
})], null),new cljs.core.PersistentArrayMap(null, 5, [cljs.core.cst$kw$id,cljs.core.cst$kw$offer_DASH_repair_DASH_ship,cljs.core.cst$kw$prereq,cljs.core.every_pred.cljs$core$IFn$_invoke$arity$2((function (p1__22254_SHARP_){
return (cljs.core.cst$kw$ship.cljs$core$IFn$_invoke$arity$1(p1__22254_SHARP_) <= (70));
}),starfreighter.db.can_afford_QMARK_.cljs$core$IFn$_invoke$arity$1(starfreighter.cards.port.repair_price)),cljs.core.cst$kw$bind,new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$merchant,starfreighter.db.some_trusting_merchant], null),cljs.core.cst$kw$weight,(function (p1__22255_SHARP_){
return starfreighter.util.bucket(cljs.core.cst$kw$ship.cljs$core$IFn$_invoke$arity$1(p1__22255_SHARP_),new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [(20),(16)], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [(40),(6)], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [(100),(4)], null)], null));
}),cljs.core.cst$kw$gen,(function (p__22295){
var map__22296 = p__22295;
var map__22296__$1 = ((((!((map__22296 == null)))?((((map__22296.cljs$lang$protocol_mask$partition0$ & (64))) || (map__22296.cljs$core$ISeq$))?true:false):false))?cljs.core.apply.cljs$core$IFn$_invoke$arity$2(cljs.core.hash_map,map__22296):map__22296);
var state = map__22296__$1;
var map__22297 = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__22296__$1,cljs.core.cst$kw$bound);
var map__22297__$1 = ((((!((map__22297 == null)))?((((map__22297.cljs$lang$protocol_mask$partition0$ & (64))) || (map__22297.cljs$core$ISeq$))?true:false):false))?cljs.core.apply.cljs$core$IFn$_invoke$arity$2(cljs.core.hash_map,map__22297):map__22297);
var merchant = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__22297__$1,cljs.core.cst$kw$merchant);
return new cljs.core.PersistentArrayMap(null, 5, [cljs.core.cst$kw$type,cljs.core.cst$kw$yes_DASH_no,cljs.core.cst$kw$speaker,merchant,cljs.core.cst$kw$text,new cljs.core.PersistentVector(null, 4, 5, cljs.core.PersistentVector.EMPTY_NODE, ["Looks like your ship\u2019s in need of some repair \u2013 it\u2019s practically falling apart! ","Want me to help you out with that? It\u2019ll only run you about",new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.cst$kw$cash,starfreighter.cards.port.repair_price], null),"."], null),cljs.core.cst$kw$yes,new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.cst$kw$spend,starfreighter.cards.port.repair_price], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.cst$kw$repair_DASH_ship,(20)], null)], null),cljs.core.cst$kw$no,cljs.core.PersistentVector.EMPTY], null);
})], null),new cljs.core.PersistentArrayMap(null, 5, [cljs.core.cst$kw$id,cljs.core.cst$kw$offer_DASH_upgrade_DASH_crew_DASH_quarters,cljs.core.cst$kw$prereq,cljs.core.every_pred.cljs$core$IFn$_invoke$arity$3((function (p1__22256_SHARP_){
return (cljs.core.cst$kw$max_DASH_crew.cljs$core$IFn$_invoke$arity$1(p1__22256_SHARP_) < (6));
}),starfreighter.db.can_afford_QMARK_.cljs$core$IFn$_invoke$arity$1(starfreighter.cards.port.upgrade_price),cljs.core.comp.cljs$core$IFn$_invoke$arity$2(starfreighter.db.find_module.cljs$core$IFn$_invoke$arity$1(cljs.core.cst$kw$shipyard),starfreighter.db.current_place)),cljs.core.cst$kw$bind,new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$merchant,starfreighter.db.some_trusting_merchant], null),cljs.core.cst$kw$weight,(function (p1__22257_SHARP_){
if(cljs.core.truth_((starfreighter.db.can_hold_more_crew_QMARK_.cljs$core$IFn$_invoke$arity$1 ? starfreighter.db.can_hold_more_crew_QMARK_.cljs$core$IFn$_invoke$arity$1(p1__22257_SHARP_) : starfreighter.db.can_hold_more_crew_QMARK_.call(null,p1__22257_SHARP_)))){
return (4);
} else {
return (8);
}
}),cljs.core.cst$kw$gen,(function (p__22300){
var map__22301 = p__22300;
var map__22301__$1 = ((((!((map__22301 == null)))?((((map__22301.cljs$lang$protocol_mask$partition0$ & (64))) || (map__22301.cljs$core$ISeq$))?true:false):false))?cljs.core.apply.cljs$core$IFn$_invoke$arity$2(cljs.core.hash_map,map__22301):map__22301);
var state = map__22301__$1;
var map__22302 = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__22301__$1,cljs.core.cst$kw$bound);
var map__22302__$1 = ((((!((map__22302 == null)))?((((map__22302.cljs$lang$protocol_mask$partition0$ & (64))) || (map__22302.cljs$core$ISeq$))?true:false):false))?cljs.core.apply.cljs$core$IFn$_invoke$arity$2(cljs.core.hash_map,map__22302):map__22302);
var merchant = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__22302__$1,cljs.core.cst$kw$merchant);
return new cljs.core.PersistentArrayMap(null, 5, [cljs.core.cst$kw$type,cljs.core.cst$kw$yes_DASH_no,cljs.core.cst$kw$speaker,merchant,cljs.core.cst$kw$text,new cljs.core.PersistentVector(null, 7, 5, cljs.core.PersistentVector.EMPTY_NODE, ["Your vessel looks a bit cramped, Captain. If you\u2019d like, I could modify it ","to give you a little more breathing room\u2026 for a fair price, of course.","How does",new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.cst$kw$cash,starfreighter.cards.port.upgrade_price], null),"sound",starfreighter.desc.o(" to you"),"?"], null),cljs.core.cst$kw$yes,new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.cst$kw$call,((function (map__22301,map__22301__$1,state,map__22302,map__22302__$1,merchant){
return (function (p1__22258_SHARP_){
return cljs.core.update.cljs$core$IFn$_invoke$arity$3(p1__22258_SHARP_,cljs.core.cst$kw$max_DASH_crew,cljs.core.inc);
});})(map__22301,map__22301__$1,state,map__22302,map__22302__$1,merchant))
], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.cst$kw$spend,starfreighter.cards.port.upgrade_price], null)], null),cljs.core.cst$kw$no,cljs.core.PersistentVector.EMPTY], null);
})], null),new cljs.core.PersistentArrayMap(null, 5, [cljs.core.cst$kw$id,cljs.core.cst$kw$offer_DASH_upgrade_DASH_cargo_DASH_hold,cljs.core.cst$kw$prereq,cljs.core.every_pred.cljs$core$IFn$_invoke$arity$3((function (p1__22259_SHARP_){
return (cljs.core.cst$kw$max_DASH_cargo.cljs$core$IFn$_invoke$arity$1(p1__22259_SHARP_) < (12));
}),starfreighter.db.can_afford_QMARK_.cljs$core$IFn$_invoke$arity$1(starfreighter.cards.port.upgrade_price),cljs.core.comp.cljs$core$IFn$_invoke$arity$2(starfreighter.db.find_module.cljs$core$IFn$_invoke$arity$1(cljs.core.cst$kw$shipyard),starfreighter.db.current_place)),cljs.core.cst$kw$bind,new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$merchant,starfreighter.db.some_trusting_merchant], null),cljs.core.cst$kw$weight,(function (p1__22260_SHARP_){
if(cljs.core.truth_((starfreighter.db.can_hold_more_cargo_QMARK_.cljs$core$IFn$_invoke$arity$1 ? starfreighter.db.can_hold_more_cargo_QMARK_.cljs$core$IFn$_invoke$arity$1(p1__22260_SHARP_) : starfreighter.db.can_hold_more_cargo_QMARK_.call(null,p1__22260_SHARP_)))){
return (6);
} else {
return (12);
}
}),cljs.core.cst$kw$gen,(function (p__22305){
var map__22306 = p__22305;
var map__22306__$1 = ((((!((map__22306 == null)))?((((map__22306.cljs$lang$protocol_mask$partition0$ & (64))) || (map__22306.cljs$core$ISeq$))?true:false):false))?cljs.core.apply.cljs$core$IFn$_invoke$arity$2(cljs.core.hash_map,map__22306):map__22306);
var state = map__22306__$1;
var map__22307 = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__22306__$1,cljs.core.cst$kw$bound);
var map__22307__$1 = ((((!((map__22307 == null)))?((((map__22307.cljs$lang$protocol_mask$partition0$ & (64))) || (map__22307.cljs$core$ISeq$))?true:false):false))?cljs.core.apply.cljs$core$IFn$_invoke$arity$2(cljs.core.hash_map,map__22307):map__22307);
var merchant = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__22307__$1,cljs.core.cst$kw$merchant);
return new cljs.core.PersistentArrayMap(null, 5, [cljs.core.cst$kw$type,cljs.core.cst$kw$yes_DASH_no,cljs.core.cst$kw$speaker,merchant,cljs.core.cst$kw$text,new cljs.core.PersistentVector(null, 7, 5, cljs.core.PersistentVector.EMPTY_NODE, ["Surely it\u2019d help your trade if you could carry more cargo at once.","How about I do you a favor and modify this bucket of bolts? For a price, of course.","Does ",new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.cst$kw$cash,starfreighter.cards.port.upgrade_price], null)," sound good",starfreighter.desc.o(" to you"),"?"], null),cljs.core.cst$kw$yes,new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.cst$kw$call,((function (map__22306,map__22306__$1,state,map__22307,map__22307__$1,merchant){
return (function (p1__22261_SHARP_){
return cljs.core.update.cljs$core$IFn$_invoke$arity$3(p1__22261_SHARP_,cljs.core.cst$kw$max_DASH_cargo,cljs.core.inc);
});})(map__22306,map__22306__$1,state,map__22307,map__22307__$1,merchant))
], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.cst$kw$spend,starfreighter.cards.port.upgrade_price], null)], null),cljs.core.cst$kw$no,cljs.core.PersistentVector.EMPTY], null);
})], null),new cljs.core.PersistentArrayMap(null, 4, [cljs.core.cst$kw$id,cljs.core.cst$kw$request_DASH_bonus,cljs.core.cst$kw$bind,new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.cst$kw$speaker,starfreighter.db.some_STAR_.cljs$core$IFn$_invoke$arity$1(starfreighter.db.crew)], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.cst$kw$amount,cljs.core.comp.cljs$core$IFn$_invoke$arity$3(cljs.core.partial.cljs$core$IFn$_invoke$arity$2(cljs.core._STAR_,starfreighter.cards.port.base_bonus_amount),cljs.core.count,cljs.core.cst$kw$crew)], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.cst$kw$_,(function (p1__22262_SHARP_){
return starfreighter.db.enforce.cljs$core$IFn$_invoke$arity$2(p1__22262_SHARP_,starfreighter.db.can_afford_QMARK_.cljs$core$IFn$_invoke$arity$1(starfreighter.db.var_STAR_.cljs$core$IFn$_invoke$arity$2(p1__22262_SHARP_,cljs.core.cst$kw$amount)));
})], null)], null),cljs.core.cst$kw$weight,(function (p1__22263_SHARP_){
return (starfreighter.util.bucket(cljs.core.cst$kw$cash.cljs$core$IFn$_invoke$arity$1(p1__22263_SHARP_),new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [(20000),(1)], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [(30000),(2)], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [(40000),(3)], null)], null)) + starfreighter.util.bucket(starfreighter.db.avg_crew_mood(p1__22263_SHARP_),new cljs.core.PersistentVector(null, 4, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [(40),(3)], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [(60),(2)], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [(80),(1)], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [(100),(0)], null)], null)));
}),cljs.core.cst$kw$gen,(function (p__22310){
var map__22311 = p__22310;
var map__22311__$1 = ((((!((map__22311 == null)))?((((map__22311.cljs$lang$protocol_mask$partition0$ & (64))) || (map__22311.cljs$core$ISeq$))?true:false):false))?cljs.core.apply.cljs$core$IFn$_invoke$arity$2(cljs.core.hash_map,map__22311):map__22311);
var state = map__22311__$1;
var map__22312 = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__22311__$1,cljs.core.cst$kw$bound);
var map__22312__$1 = ((((!((map__22312 == null)))?((((map__22312.cljs$lang$protocol_mask$partition0$ & (64))) || (map__22312.cljs$core$ISeq$))?true:false):false))?cljs.core.apply.cljs$core$IFn$_invoke$arity$2(cljs.core.hash_map,map__22312):map__22312);
var amount = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__22312__$1,cljs.core.cst$kw$amount);
var speaker = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__22312__$1,cljs.core.cst$kw$speaker);
var crew_size = cljs.core.count(cljs.core.cst$kw$crew.cljs$core$IFn$_invoke$arity$1(state));
var just_one_QMARK_ = cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(crew_size,(1));
return new cljs.core.PersistentArrayMap(null, 5, [cljs.core.cst$kw$type,cljs.core.cst$kw$yes_DASH_no,cljs.core.cst$kw$speaker,speaker,cljs.core.cst$kw$text,new cljs.core.PersistentVector(null, 15, 5, cljs.core.PersistentVector.EMPTY_NODE, ["Say, Cap\u2019n\u2026",((just_one_QMARK_)?starfreighter.desc.r.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq(["I\u2019ve","we\u2019ve","we\u2019ve both"], 0)):starfreighter.desc.r.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq(["we\u2019ve","we\u2019ve all"], 0)))," been working pretty hard lately, and ",((just_one_QMARK_)?"I was":new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [starfreighter.desc.r.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq(["the rest of the crew and I","we"], 0))," were"], null))," wondering if ",starfreighter.desc.o("maybe "),((just_one_QMARK_)?"I":"we")," might be due a small bonus for everything ",((just_one_QMARK_)?"I":"we")," do",starfreighter.desc.o(" around here"),".",new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.cst$kw$cash,starfreighter.cards.port.base_bonus_amount], null),((just_one_QMARK_)?null:"each "),"seems pretty fair\u2026"], null),cljs.core.cst$kw$yes,new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.cst$kw$spend,amount], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.cst$kw$add_DASH_whole_DASH_crew_DASH_memory,cljs.core.cst$kw$gave_DASH_bonus], null)], null),cljs.core.cst$kw$no,new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.cst$kw$add_DASH_whole_DASH_crew_DASH_memory,cljs.core.cst$kw$declined_DASH_bonus_DASH_request], null)], null)], null);
})], null),new cljs.core.PersistentArrayMap(null, 5, [cljs.core.cst$kw$id,cljs.core.cst$kw$request_DASH_depart,cljs.core.cst$kw$repeatable_QMARK_,true,cljs.core.cst$kw$prereq,(function (p1__22264_SHARP_){
return (cljs.core.count(cljs.core.cst$kw$cargo.cljs$core$IFn$_invoke$arity$1(p1__22264_SHARP_)) >= (2));
}),cljs.core.cst$kw$weight,(function (p1__22265_SHARP_){
return (starfreighter.util.bucket(cljs.core.count(cljs.core.cst$kw$cargo.cljs$core$IFn$_invoke$arity$1(p1__22265_SHARP_)),new cljs.core.PersistentVector(null, 5, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [(2),(1)], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [(3),(2)], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [(4),(4)], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [(5),(6)], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [(6),(8)], null)], null)) + starfreighter.util.bucket(cljs.core.count(cljs.core.cst$kw$recent_DASH_picks.cljs$core$IFn$_invoke$arity$1(p1__22265_SHARP_)),new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [(5),(1)], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [(7),(2)], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [(100),(3)], null)], null)));
}),cljs.core.cst$kw$gen,(function (state){
var proposed_dest = starfreighter.db.where_to_next(state);
var speaker = starfreighter.db.some_STAR_.cljs$core$IFn$_invoke$arity$2(state,starfreighter.db.crew);
return new cljs.core.PersistentArrayMap(null, 6, [cljs.core.cst$kw$type,cljs.core.cst$kw$yes_DASH_no,cljs.core.cst$kw$interruptible_QMARK_,true,cljs.core.cst$kw$speaker,speaker,cljs.core.cst$kw$text,new cljs.core.PersistentVector(null, 8, 5, cljs.core.PersistentVector.EMPTY_NODE, [starfreighter.desc.r.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, ["Dunno \u2018bout you, Cap\u2019n, but it looks to me like the pickings ","to be had round here are pretty slim."], null),"I\u2019m getting pretty restless, Cap\u2019n.","Say, Cap\u2019n\u2026 we\u2019ve been in port a while, haven\u2019t we?","Sitting here in port is getting mighty boring, Cap\u2019n.","We\u2019ve been in port a good while now."], 0)),starfreighter.desc.r.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq(["Don\u2019tcha think it\u2019s about time","How about","What do you say"], 0))," we ",starfreighter.desc.r.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq(["get a move on","get going","hit the road","push off","raise anchor","set out","set sail","shove off"], 0))," for ",new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.cst$kw$link,new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.cst$kw$places,proposed_dest], null)], null),starfreighter.desc.o("already"),"?"], null),cljs.core.cst$kw$yes,new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.cst$kw$begin_DASH_departure_DASH_for,proposed_dest], null)], null),cljs.core.cst$kw$no,new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.cst$kw$add_DASH_memory,speaker,cljs.core.cst$kw$declined_DASH_depart_DASH_request], null)], null)], null);
})], null),new cljs.core.PersistentArrayMap(null, 5, [cljs.core.cst$kw$id,cljs.core.cst$kw$request_DASH_resign,cljs.core.cst$kw$prereq,(function (p1__22266_SHARP_){
return (cljs.core.count(cljs.core.cst$kw$crew.cljs$core$IFn$_invoke$arity$1(p1__22266_SHARP_)) > (1));
}),cljs.core.cst$kw$bind,new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$quitter,starfreighter.db.some_where.cljs$core$IFn$_invoke$arity$2(starfreighter.db.mood_at_most_QMARK_.cljs$core$IFn$_invoke$arity$1((30)),starfreighter.db.crew)], null),cljs.core.cst$kw$weight,(function (p1__22267_SHARP_){
return starfreighter.util.bucket(starfreighter.db.calc_mood(starfreighter.db.var_STAR_.cljs$core$IFn$_invoke$arity$2(p1__22267_SHARP_,cljs.core.cst$kw$quitter)),new cljs.core.PersistentVector(null, 5, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [(5),(8)], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [(10),(6)], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [(15),(4)], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [(20),(2)], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [(30),(1)], null)], null));
}),cljs.core.cst$kw$gen,(function (p__22315){
var map__22316 = p__22315;
var map__22316__$1 = ((((!((map__22316 == null)))?((((map__22316.cljs$lang$protocol_mask$partition0$ & (64))) || (map__22316.cljs$core$ISeq$))?true:false):false))?cljs.core.apply.cljs$core$IFn$_invoke$arity$2(cljs.core.hash_map,map__22316):map__22316);
var state = map__22316__$1;
var map__22317 = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__22316__$1,cljs.core.cst$kw$bound);
var map__22317__$1 = ((((!((map__22317 == null)))?((((map__22317.cljs$lang$protocol_mask$partition0$ & (64))) || (map__22317.cljs$core$ISeq$))?true:false):false))?cljs.core.apply.cljs$core$IFn$_invoke$arity$2(cljs.core.hash_map,map__22317):map__22317);
var quitter = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__22317__$1,cljs.core.cst$kw$quitter);
var bonus = (30000);
var on_resign = new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.cst$kw$add_DASH_whole_DASH_crew_DASH_memory,cljs.core.cst$kw$crewmate_DASH_resigned], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.cst$kw$drop_DASH_crew,quitter], null)], null);
var fail_to_convince = new cljs.core.PersistentArrayMap(null, 3, [cljs.core.cst$kw$type,cljs.core.cst$kw$info,cljs.core.cst$kw$speaker,quitter,cljs.core.cst$kw$ok,on_resign], null);
var next_if_no = (cljs.core.truth_(starfreighter.db.can_afford_QMARK_.cljs$core$IFn$_invoke$arity$2(state,bonus))?new cljs.core.PersistentArrayMap(null, 5, [cljs.core.cst$kw$type,cljs.core.cst$kw$yes_DASH_no,cljs.core.cst$kw$speaker,quitter,cljs.core.cst$kw$text,new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, ["Hmm. Well, if you gave me a really substantial bonus \u2013 say,",new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.cst$kw$cash,bonus], null),"\u2013 I suppose there\u2019s a chance you might be able to convince me to stay on\u2026"], null),cljs.core.cst$kw$yes,new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.cst$kw$add_DASH_memory,quitter,cljs.core.cst$kw$gave_DASH_bonus], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.cst$kw$spend,bonus], null)], null),cljs.core.cst$kw$no,new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.cst$kw$set_DASH_next_DASH_card,cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(fail_to_convince,cljs.core.cst$kw$text,"Alright, then \u2013 I guess it\u2019s official. I quit.")], null)], null)], null):cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(fail_to_convince,cljs.core.cst$kw$text,new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, ["Sorry, but I just don\u2019t think there\u2019s anything you can offer me ","that would be enough to convince me to stay."], null)));
return new cljs.core.PersistentArrayMap(null, 5, [cljs.core.cst$kw$type,cljs.core.cst$kw$yes_DASH_no,cljs.core.cst$kw$speaker,quitter,cljs.core.cst$kw$text,new cljs.core.PersistentVector(null, 4, 5, cljs.core.PersistentVector.EMPTY_NODE, ["Sorry, Cap\u2019n, but I think ",starfreighter.desc.r.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq(["this",cljs.core.cst$kw$name.cljs$core$IFn$_invoke$arity$1(starfreighter.db.current_place(state))], 0))," might just be the end of the line for me. I\u2019d like to request ","your permission to resign."], null),cljs.core.cst$kw$yes,on_resign,cljs.core.cst$kw$no,new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.cst$kw$set_DASH_next_DASH_card,next_if_no], null)], null)], null);
})], null),new cljs.core.PersistentArrayMap(null, 5, [cljs.core.cst$kw$id,cljs.core.cst$kw$info_DASH_crew_DASH_home,cljs.core.cst$kw$prereq,(function (p1__22268_SHARP_){
return !(cljs.core.contains_QMARK_(cljs.core.cst$kw$recent_DASH_picks.cljs$core$IFn$_invoke$arity$1(p1__22268_SHARP_),cljs.core.cst$kw$offer_DASH_join_DASH_crew));
}),cljs.core.cst$kw$bind,new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$speaker,(function (p1__22269_SHARP_){
return starfreighter.db.some_where.cljs$core$IFn$_invoke$arity$3(p1__22269_SHARP_,starfreighter.db.from_QMARK_.cljs$core$IFn$_invoke$arity$1(starfreighter.db.current_place(p1__22269_SHARP_)),starfreighter.db.crew);
})], null),cljs.core.cst$kw$weight,cljs.core.constantly((4)),cljs.core.cst$kw$gen,(function (p__22320){
var map__22321 = p__22320;
var map__22321__$1 = ((((!((map__22321 == null)))?((((map__22321.cljs$lang$protocol_mask$partition0$ & (64))) || (map__22321.cljs$core$ISeq$))?true:false):false))?cljs.core.apply.cljs$core$IFn$_invoke$arity$2(cljs.core.hash_map,map__22321):map__22321);
var state = map__22321__$1;
var map__22322 = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__22321__$1,cljs.core.cst$kw$bound);
var map__22322__$1 = ((((!((map__22322 == null)))?((((map__22322.cljs$lang$protocol_mask$partition0$ & (64))) || (map__22322.cljs$core$ISeq$))?true:false):false))?cljs.core.apply.cljs$core$IFn$_invoke$arity$2(cljs.core.hash_map,map__22322):map__22322);
var speaker = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__22322__$1,cljs.core.cst$kw$speaker);
return new cljs.core.PersistentArrayMap(null, 4, [cljs.core.cst$kw$type,cljs.core.cst$kw$info,cljs.core.cst$kw$speaker,speaker,cljs.core.cst$kw$text,new cljs.core.PersistentVector(null, 6, 5, cljs.core.PersistentVector.EMPTY_NODE, ["Y\u2019know, Cap\u2019n, I never thought I\u2019d say this, but it\u2019s actually ","kind of nice to ",starfreighter.desc.r.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq(["see","visit"], 0))," ",starfreighter.desc.r.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq(["home","my home system","my old home system"], 0))," again. Especially since this time, I know I can leave whenever I want!"], null),cljs.core.cst$kw$ok,new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.cst$kw$add_DASH_memory,speaker,cljs.core.cst$kw$visited_DASH_home], null)], null)], null);
})], null)], null);
