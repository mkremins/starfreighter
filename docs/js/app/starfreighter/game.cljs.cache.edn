{:rename-macros {}, :renames {}, :use-macros {}, :excludes #{rand-int rand-nth shuffle rand}, :name starfreighter.game, :imports nil, :requires {starfreighter.cards.bar starfreighter.cards.bar, gambling starfreighter.cards.gambling, space starfreighter.cards.space, desc starfreighter.desc, starfreighter.cards.gambling starfreighter.cards.gambling, departure starfreighter.cards.departure, gen starfreighter.gen, rand starfreighter.rand, arrival starfreighter.cards.arrival, db starfreighter.db, starfreighter.cards.space starfreighter.cards.space, loans starfreighter.cards.loans, bar starfreighter.cards.bar, starfreighter.gen starfreighter.gen, util starfreighter.util, starfreighter.cards.loans starfreighter.cards.loans, starfreighter.util starfreighter.util, starfreighter.rand starfreighter.rand, starfreighter.db starfreighter.db, port starfreighter.cards.port, starfreighter.cards.arrival starfreighter.cards.arrival, starfreighter.cards.departure starfreighter.cards.departure, starfreighter.desc starfreighter.desc, starfreighter.cards.port starfreighter.cards.port}, :uses nil, :defs {compile-choices {:protocol-inline nil, :meta {:file "/Users/mkremins/Projects/starfreighter/src/starfreighter/game.cljs", :line 31, :column 7, :end-line 31, :end-column 22, :arglists (quote ([state card]))}, :name starfreighter.game/compile-choices, :variadic false, :file "/Users/mkremins/Projects/starfreighter/src/starfreighter/game.cljs", :end-column 22, :method-params ([state card]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 31, :end-line 31, :max-fixed-arity 2, :fn-var true, :arglists (quote ([state card]))}, interruptible? {:protocol-inline nil, :meta {:file "/Users/mkremins/Projects/starfreighter/src/starfreighter/game.cljs", :line 16, :column 7, :end-line 16, :end-column 21, :arglists (quote ([card])), :doc "Returns whether a given `card` is interruptible – i.e. whether it's OK (both\n  gameplay- and narrative-wise) for the player to \"just walk away\" from the\n  situation the card represents, e.g. by initiating travel to another place."}, :name starfreighter.game/interruptible?, :variadic false, :file "/Users/mkremins/Projects/starfreighter/src/starfreighter/game.cljs", :end-column 21, :method-params ([card]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 16, :end-line 16, :max-fixed-arity 1, :fn-var true, :arglists (quote ([card])), :doc "Returns whether a given `card` is interruptible – i.e. whether it's OK (both\n  gameplay- and narrative-wise) for the player to \"just walk away\" from the\n  situation the card represents, e.g. by initiating travel to another place."}, handle-choice {:protocol-inline nil, :meta {:file "/Users/mkremins/Projects/starfreighter/src/starfreighter/game.cljs", :line 134, :column 7, :end-line 134, :end-column 20, :arglists (quote ([state effects]))}, :name starfreighter.game/handle-choice, :variadic false, :file "/Users/mkremins/Projects/starfreighter/src/starfreighter/game.cljs", :end-column 20, :method-params ([state effects]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 134, :end-line 134, :max-fixed-arity 2, :fn-var true, :arglists (quote ([state effects]))}, draw-next-card {:protocol-inline nil, :meta {:file "/Users/mkremins/Projects/starfreighter/src/starfreighter/game.cljs", :line 130, :column 7, :end-line 130, :end-column 21, :arglists (quote ([state]))}, :name starfreighter.game/draw-next-card, :variadic false, :file "/Users/mkremins/Projects/starfreighter/src/starfreighter/game.cljs", :end-column 21, :method-params ([state]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 130, :end-line 130, :max-fixed-arity 1, :fn-var true, :arglists (quote ([state]))}, applicable-arrival-if-any {:protocol-inline nil, :meta {:file "/Users/mkremins/Projects/starfreighter/src/starfreighter/game.cljs", :line 73, :column 7, :end-line 73, :end-column 32, :arglists (quote ([state]))}, :name starfreighter.game/applicable-arrival-if-any, :variadic false, :file "/Users/mkremins/Projects/starfreighter/src/starfreighter/game.cljs", :end-column 32, :method-params ([state]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 73, :end-line 73, :max-fixed-arity 1, :fn-var true, :arglists (quote ([state]))}, draw-next-card* {:protocol-inline nil, :meta {:file "/Users/mkremins/Projects/starfreighter/src/starfreighter/game.cljs", :line 113, :column 7, :end-line 113, :end-column 22, :arglists (quote ([state]))}, :name starfreighter.game/draw-next-card*, :variadic false, :file "/Users/mkremins/Projects/starfreighter/src/starfreighter/game.cljs", :end-column 22, :method-params ([state]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 113, :end-line 113, :max-fixed-arity 1, :fn-var true, :arglists (quote ([state]))}, prepare-to-depart {:protocol-inline nil, :meta {:file "/Users/mkremins/Projects/starfreighter/src/starfreighter/game.cljs", :line 50, :column 7, :end-line 50, :end-column 24, :arglists (quote ([state]))}, :name starfreighter.game/prepare-to-depart, :variadic false, :file "/Users/mkremins/Projects/starfreighter/src/starfreighter/game.cljs", :end-column 24, :method-params ([state]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 50, :end-line 50, :max-fixed-arity 1, :fn-var true, :arglists (quote ([state]))}, create-init-state {:protocol-inline nil, :meta {:file "/Users/mkremins/Projects/starfreighter/src/starfreighter/game.cljs", :line 145, :column 7, :end-line 145, :end-column 24, :arglists (quote ([]))}, :name starfreighter.game/create-init-state, :variadic false, :file "/Users/mkremins/Projects/starfreighter/src/starfreighter/game.cljs", :end-column 24, :method-params ([]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 145, :end-line 145, :max-fixed-arity 0, :fn-var true, :arglists (quote ([]))}, affordable? {:protocol-inline nil, :meta {:file "/Users/mkremins/Projects/starfreighter/src/starfreighter/game.cljs", :line 25, :column 7, :end-line 25, :end-column 18, :arglists (quote ([state choice]))}, :name starfreighter.game/affordable?, :variadic false, :file "/Users/mkremins/Projects/starfreighter/src/starfreighter/game.cljs", :end-column 18, :method-params ([state choice]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 25, :end-line 25, :max-fixed-arity 2, :fn-var true, :arglists (quote ([state choice]))}, restart-game {:protocol-inline nil, :meta {:file "/Users/mkremins/Projects/starfreighter/src/starfreighter/game.cljs", :line 169, :column 7, :end-line 169, :end-column 19, :arglists (quote ([& _])), :top-fn {:variadic true, :max-fixed-arity 0, :method-params [(_)], :arglists ([& _]), :arglists-meta (nil)}}, :name starfreighter.game/restart-game, :variadic true, :file "/Users/mkremins/Projects/starfreighter/src/starfreighter/game.cljs", :end-column 19, :top-fn {:variadic true, :max-fixed-arity 0, :method-params [(_)], :arglists ([& _]), :arglists-meta (nil)}, :method-params [(_)], :protocol-impl nil, :arglists-meta (nil), :column 1, :line 169, :end-line 169, :max-fixed-arity 0, :fn-var true, :arglists ([& _])}, default-deck {:protocol-inline nil, :meta {:file "/Users/mkremins/Projects/starfreighter/src/starfreighter/game.cljs", :line 94, :column 9, :end-line 94, :end-column 21, :arglists (quote ([state]))}, :name starfreighter.game/default-deck, :variadic false, :file "/Users/mkremins/Projects/starfreighter/src/starfreighter/game.cljs", :end-column 21, :method-params ([state]), :protocol-impl nil, :arglists-meta (nil nil), :column 3, :line 94, :end-line 94, :max-fixed-arity 1, :fn-var true, :arglists (quote ([state]))}, applicable-game-over-if-any {:protocol-inline nil, :meta {:file "/Users/mkremins/Projects/starfreighter/src/starfreighter/game.cljs", :line 62, :column 7, :end-line 62, :end-column 34, :arglists (quote ([state]))}, :name starfreighter.game/applicable-game-over-if-any, :variadic false, :file "/Users/mkremins/Projects/starfreighter/src/starfreighter/game.cljs", :end-column 34, :method-params ([state]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 62, :end-line 62, :max-fixed-arity 1, :fn-var true, :arglists (quote ([state]))}, try-pick {:protocol-inline nil, :meta {:file "/Users/mkremins/Projects/starfreighter/src/starfreighter/game.cljs", :line 101, :column 7, :end-line 101, :end-column 15, :arglists (quote ([state metacard]))}, :name starfreighter.game/try-pick, :variadic false, :file "/Users/mkremins/Projects/starfreighter/src/starfreighter/game.cljs", :end-column 15, :method-params ([state metacard]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 101, :end-line 101, :max-fixed-arity 2, :fn-var true, :arglists (quote ([state metacard]))}}, :require-macros nil, :cljs.analyzer/constants {:seen #{:deadly? :drop-passengers :cultures :yes :earn :cargo :stage :repeatable? :in-port :else :ship-falls-apart :call :gen :name :deck :spend :prepare-to-depart :background :crew :type :drop-cargo :completed-delivery :choices :travel :icon :cash :prereq :merchants :turn :card :ship :advance-time? :recent-picks :bound :chars :weight :id :effects :ok :at :next-card :info :add-memory :info-target :pay-after :game-over :interruptible? :places :merchant :max-crew :offer-join-crew :max-cargo :speaker :yes-no :no :begin-departure-for :bind :text}, :order [:interruptible? :effects :choices :spend :type :icon :background :deadly? :call :ok :no :yes :name :info-target :card :id :speaker :text :prepare-to-depart :yes-no :begin-departure-for :ship :ship-falls-apart :game-over :else :drop-cargo :info :earn :pay-after :add-memory :merchant :completed-delivery :drop-passengers :repeatable? :recent-picks :prereq :bind :bound :next-card :deck :weight :gen :advance-time? :turn :cultures :places :merchants :crew :cargo :travel :cash :chars :max-crew :max-cargo :stage :at :in-port :offer-join-crew]}, :doc nil}